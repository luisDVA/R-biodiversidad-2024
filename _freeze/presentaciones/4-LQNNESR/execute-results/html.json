{
  "hash": "f9ec953b7f72e7a7faf9d3be7e6a985d",
  "result": {
    "markdown": "---\ntitle: \"Lo que nadie nos ense√±√≥ sobre R\"\nauthor: Luis D. Verde Arregoitia\nformat:\n  revealjs:\n    theme: curso_styles.scss\n    transition: fade\n    progress: true\n    preview-links: true\n    hide-inactive-cursor: true\n    highlight-style: printing\n    pause: true\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n## Temas de este bloque:\n\n‚Äì Entornos de trabajo y configuraci√≥n  \n‚Äì Iteraci√≥n y vectorizaci√≥n para evitar repetici√≥n  \n‚Äì Trabajando con listas  \n‚Äì Manejo de matrices  \n‚Äì Atajos y herramientas para mayor eficiencia  \n‚Äì Errores comunes y c√≥mo buscar soluciones  \n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-1_c71b767c4fa40bebe1c0c195035d428b'}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n\n\n\n# Personalizando el entorno de trabajo\n\n## Personalizaci√≥n\n\n-   Colores para el IDE - üîó [tmThemeEditor](https://tmtheme-editor.glitch.me/) por Allen Bargi\n\n::: {style=\"background-color: #3F3B3B; box-shadow: 10px 10px grey;  padding: 25px\"}\n\n:::{.neonText}\n*Nadie nos va a tomar en serio en la cafeter√≠a si no programamos con un fondo oscuro*\n:::\n\n::: {style=\"text-align: right\"}\n*-Jared Lander*\\\nüìº [R: Then and now](https://www.youtube.com/watch?v=gjpNEVcG1nU)\n:::\n:::\n\n-   Fuentes y texto - üîó [Nerd Fonts](https://www.nerdfonts.com/font-downloads)\n\n-   Disposici√≥n de los paneles\n\n## Personalizando el arranque en R\n\nEl archivo `.Rprofile` file contiene c√≥digo que se ejecuta cada que arrancamos R.\n\n</br> [`.Rprofile` generalmente vive en nuestro directorio de inicio]{style=\"text-align: center;\"}  \n\nPodemos modificarlo con `usethis::edit_r_profile()`\n\n*Usar con precauci√≥n para no perder reproducibilidad*\n\n:::{.rightref}\n:::{.refbox}\nR Startup\\\n[What they forgot to teach you about R](https://rstats.wtf/r-startup.html%5D)\n:::\n:::\n\n## Arranque\n\n- Saludos o recordatorios con `cowsay`\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-2_251475e066c17c0d162da9fe46e0fc04'}\n\n```{.r .cell-code}\n#>  ----- \n#> No olviden tomar mucha agua \n#>  ------ \n#>     \\   \n#>      \\\n#>   ><((((¬∫>  ><((((¬∫>  ><((((¬∫>  ><((((¬∫>  ><((((¬∫>\n#>       \n```\n:::\n\n\n\n- Ayuda con errores de dedo con `fcuk`\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-3_d5048a96d5dc83d8fa75a88e1620bc50'}\n\n```{.text .cell-code}\n> lenght(1:12)\nError in lenght(1:12) : could not find function \"lenght\"\n> fcuk::init_error_tracker()\n> lenght(1:12)\nError in lenght(1:12) : could not find function \"lenght\"\nDid you mean : length or ...length ?\n```\n:::\n\n\n\n\n# Iteraci√≥n \n\n## Aplicando una funci√≥n varias veces\n\nCopiar/pegar c√≥digo para editarlo en an√°lisis repetitivos agrega pasos innecesarios, pierde tiempo, y aumenta el riesgo de introducir errores \n\n</br>\n\n::::{.rightref}\n:::{.refbox}\nNick Holt (2017)\\\n[Function Iterations in R](https://nick-holt.github.io/2017/12/function-iterations-in-r/)\n:::\n::::\n\n## Ejercicio - futbol {background-color=\"#a4c5ff\"}\n\nEl archivo `tabla_futbol.csv` contiene la clasificaci√≥n en la tabla global de la FIFA de los primeros 20 pa√≠ses de 1994 a 2022. Agrupa pa√≠ses en diferentes confederaciones.\n\n</br> \n\n¬øDe qu√© confederaci√≥n fue el equipo 20 cada a√±o?  \n\nej. para 1994 Zambia fue #20 y su confederaci√≥n es \"CAF\"\n\n\n##\n\n### Copiando, pegando, y editando\n\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-4_ff04ff09ea3b01687557420c818ebd6e'}\n\n```{.r .cell-code}\nranking1994 <- fifa20esp[fifa20esp$periodo==\"1994-06-14\",]\npais201994 <- ranking1994[ranking1994$posicion==20,]$pais\npais201994\nranking1995 <- fifa20esp[fifa20esp$periodo==\"1995-06-13\",]\npais201995 <- ranking1995[ranking1995$posicion==20,]$pais\npais201995\n```\n:::\n\n\n\n> Siguiendo as√≠ seguramente introducimos alg√∫n error poco evidente y dif√≠cil de detectar\n\n## Datos agrupados\n\nLa mayor√≠a de nuestras tareas se pueden desarrollar siguiendo el paradigma \"_dividir - aplicar - combinar_\" (\n[\"split-apply-combine\"]{style=\"color: purple\"}):\n\n- dividir los datos en grupos\n- aplicar alguna funci√≥n a cada grupo\n- combinar los resultados\n\n::::{.rightref}\n:::{.refbox}\nData Carpentry (2018)\\\n[Aggregating and analyzing data with dplyr](https://datacarpentry.org/R-genomics/04-dplyr.html)\n\nHadley Wickham (2011)\\\n[The split-apply-combine strategy for data analysis](https://doi.org/10.18637/jss.v040.i01)\n:::\n::::\n\n## `dplyr::group_by()`\n\n- Define grupos seg√∫n una o m√°s variables  \n- Estratifica un data frame  \n- equivalente a `aggregate()` y al argumento '`by =`' de `data.table`\n\n![Manipulaci√≥n de datos en R con dplyr - Rub√©n S√°nchez](imgs/groupby.PNG){width=\"64%\"}\n\n\n\n## Trabajando con datos agrupados\n\nCon la versi√≥n agrupada de nuestra tabla, las funciones de `dplyr` trabajan sobre cada grupo por separado y despu√©s se combinan los resultados.\n\n</br>\n\n::::{.rightref}\n:::{.refbox}\nRStudio (2021)\\\n[Data transformation with dplyr cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-transformation.pdf)\n:::\n:::\n\n## Opciones para datos agrupados\n\n- resumir valores (media, mediana, etc. por grupo)\n- extraer las primeras o √∫ltimas _n_ filas por grupo\n- identificar valores m√°ximos o m√≠nimos\n- eliminar filas repetidas\n- contar observaciones, etc.\n\n## Datos `msleep`\n\nRasgos de 83 especies de mam√≠feros y sus horas de sue√±o. derivados de Savage & West (2007) e incluidos con `ggplot2`.\n\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-5_4887f8a6ca9778face147d257b3a6c24'}\n::: {.cell-output-display}\n```{=html}\n<div id=\"zosinfwweb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#zosinfwweb table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zosinfwweb thead, #zosinfwweb tbody, #zosinfwweb tfoot, #zosinfwweb tr, #zosinfwweb td, #zosinfwweb th {\n  border-style: none;\n}\n\n#zosinfwweb p {\n  margin: 0;\n  padding: 0;\n}\n\n#zosinfwweb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zosinfwweb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#zosinfwweb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#zosinfwweb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zosinfwweb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zosinfwweb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zosinfwweb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zosinfwweb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zosinfwweb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zosinfwweb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zosinfwweb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zosinfwweb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zosinfwweb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zosinfwweb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zosinfwweb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zosinfwweb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zosinfwweb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zosinfwweb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zosinfwweb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zosinfwweb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zosinfwweb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zosinfwweb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zosinfwweb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zosinfwweb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zosinfwweb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zosinfwweb .gt_left {\n  text-align: left;\n}\n\n#zosinfwweb .gt_center {\n  text-align: center;\n}\n\n#zosinfwweb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zosinfwweb .gt_font_normal {\n  font-weight: normal;\n}\n\n#zosinfwweb .gt_font_bold {\n  font-weight: bold;\n}\n\n#zosinfwweb .gt_font_italic {\n  font-style: italic;\n}\n\n#zosinfwweb .gt_super {\n  font-size: 65%;\n}\n\n#zosinfwweb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zosinfwweb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zosinfwweb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zosinfwweb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zosinfwweb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zosinfwweb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zosinfwweb .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"name\">name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"genus\">genus</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"vore\">vore</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"order\">order</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"conservation\">conservation</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"sleep_total\">sleep_total</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"sleep_rem\">sleep_rem</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"sleep_cycle\">sleep_cycle</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"awake\">awake</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"brainwt\">brainwt</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 21px;\" scope=\"col\" id=\"bodywt\">bodywt</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Cheetah</td>\n<td headers=\"genus\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Acinonyx</td>\n<td headers=\"vore\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">carni</td>\n<td headers=\"order\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Carnivora</td>\n<td headers=\"conservation\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">lc</td>\n<td headers=\"sleep_total\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">12.1</td>\n<td headers=\"sleep_rem\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"sleep_cycle\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"awake\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">11.9</td>\n<td headers=\"brainwt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"bodywt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">50.000</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Owl monkey</td>\n<td headers=\"genus\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Aotus</td>\n<td headers=\"vore\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">omni</td>\n<td headers=\"order\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Primates</td>\n<td headers=\"conservation\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"sleep_total\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">17.0</td>\n<td headers=\"sleep_rem\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">1.8</td>\n<td headers=\"sleep_cycle\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"awake\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">7.0</td>\n<td headers=\"brainwt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.01550</td>\n<td headers=\"bodywt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.480</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Mountain beaver</td>\n<td headers=\"genus\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Aplodontia</td>\n<td headers=\"vore\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">herbi</td>\n<td headers=\"order\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Rodentia</td>\n<td headers=\"conservation\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">nt</td>\n<td headers=\"sleep_total\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">14.4</td>\n<td headers=\"sleep_rem\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">2.4</td>\n<td headers=\"sleep_cycle\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"awake\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">9.6</td>\n<td headers=\"brainwt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"bodywt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">1.350</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Greater short-tailed shrew</td>\n<td headers=\"genus\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Blarina</td>\n<td headers=\"vore\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">omni</td>\n<td headers=\"order\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Soricomorpha</td>\n<td headers=\"conservation\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">lc</td>\n<td headers=\"sleep_total\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">14.9</td>\n<td headers=\"sleep_rem\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">2.3</td>\n<td headers=\"sleep_cycle\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.1333333</td>\n<td headers=\"awake\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">9.1</td>\n<td headers=\"brainwt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.00029</td>\n<td headers=\"bodywt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.019</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Cow</td>\n<td headers=\"genus\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Bos</td>\n<td headers=\"vore\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">herbi</td>\n<td headers=\"order\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Artiodactyla</td>\n<td headers=\"conservation\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">domesticated</td>\n<td headers=\"sleep_total\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">4.0</td>\n<td headers=\"sleep_rem\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.7</td>\n<td headers=\"sleep_cycle\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.6666667</td>\n<td headers=\"awake\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">20.0</td>\n<td headers=\"brainwt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.42300</td>\n<td headers=\"bodywt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">600.000</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Three-toed sloth</td>\n<td headers=\"genus\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Bradypus</td>\n<td headers=\"vore\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">herbi</td>\n<td headers=\"order\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">Pilosa</td>\n<td headers=\"conservation\" class=\"gt_row gt_left\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"sleep_total\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">14.4</td>\n<td headers=\"sleep_rem\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">2.2</td>\n<td headers=\"sleep_cycle\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">0.7666667</td>\n<td headers=\"awake\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">9.6</td>\n<td headers=\"brainwt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">NA</td>\n<td headers=\"bodywt\" class=\"gt_row gt_right\" style=\"font-size: 21px;\">3.850</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n\n## M√°ximo `brainwt` para cada orden\n\n:::{.med-code}\n\n\n::: {.cell output-location='fragment' hash='4-LQNNESR_cache/html/unnamed-chunk-6_54405113a393b0a8795aab871a3ae48b'}\n\n```{.r .cell-code}\nmsleep %>% group_by(order) %>% \n  slice_max(brainwt,n=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 √ó 11\n# Groups:   order [19]\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Tenrec Tenr‚Ä¶ omni  Afro‚Ä¶ <NA>                15.6       2.3      NA       8.4\n 2 Cow    Bos   herbi Arti‚Ä¶ domesticated         4         0.7       0.667  20  \n 3 Gray ‚Ä¶ Hali‚Ä¶ carni Carn‚Ä¶ lc                   6.2       1.5      NA      17.8\n 4 Pilot‚Ä¶ Glob‚Ä¶ carni Ceta‚Ä¶ cd                   2.7       0.1      NA      21.4\n 5 Commo‚Ä¶ Phoc‚Ä¶ carni Ceta‚Ä¶ vu                   5.6      NA        NA      18.4\n 6 Bottl‚Ä¶ Turs‚Ä¶ carni Ceta‚Ä¶ <NA>                 5.2      NA        NA      18.8\n 7 Big b‚Ä¶ Epte‚Ä¶ inse‚Ä¶ Chir‚Ä¶ lc                  19.7       3.9       0.117   4.3\n 8 Giant‚Ä¶ Prio‚Ä¶ inse‚Ä¶ Cing‚Ä¶ en                  18.1       6.1      NA       5.9\n 9 North‚Ä¶ Dide‚Ä¶ omni  Dide‚Ä¶ lc                  18         4.9       0.333   6  \n10 Phala‚Ä¶ Phal‚Ä¶ <NA>  Dipr‚Ä¶ <NA>                13.7       1.8      NA      10.3\n# ‚Ñπ 11 more rows\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n```\n:::\n:::\n\n\n:::\n\n## Muestrar una fila al azar de cada grupo\n\n:::{.med-code}\n\n\n::: {.cell output-location='fragment' hash='4-LQNNESR_cache/html/unnamed-chunk-7_98a9b45ca58c261eb0654f1bfca4faac'}\n\n```{.r .cell-code}\nmsleep %>% group_by(order) %>% \n  slice_sample(n=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 √ó 11\n# Groups:   order [19]\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Tenrec Tenr‚Ä¶ omni  Afro‚Ä¶ <NA>                15.6       2.3      NA       8.4\n 2 Roe d‚Ä¶ Capr‚Ä¶ herbi Arti‚Ä¶ lc                   3        NA        NA      21  \n 3 Arcti‚Ä¶ Vulp‚Ä¶ carni Carn‚Ä¶ <NA>                12.5      NA        NA      11.5\n 4 Pilot‚Ä¶ Glob‚Ä¶ carni Ceta‚Ä¶ cd                   2.7       0.1      NA      21.4\n 5 Littl‚Ä¶ Myot‚Ä¶ inse‚Ä¶ Chir‚Ä¶ <NA>                19.9       2         0.2     4.1\n 6 Giant‚Ä¶ Prio‚Ä¶ inse‚Ä¶ Cing‚Ä¶ en                  18.1       6.1      NA       5.9\n 7 North‚Ä¶ Dide‚Ä¶ omni  Dide‚Ä¶ lc                  18         4.9       0.333   6  \n 8 Potor‚Ä¶ Poto‚Ä¶ herbi Dipr‚Ä¶ <NA>                11.1       1.5      NA      12.9\n 9 Deser‚Ä¶ Para‚Ä¶ <NA>  Erin‚Ä¶ lc                  10.3       2.7      NA      13.7\n10 Rock ‚Ä¶ Proc‚Ä¶ <NA>  Hyra‚Ä¶ lc                   5.4       0.5      NA      18.6\n11 Rabbit Oryc‚Ä¶ herbi Lago‚Ä¶ domesticated         8.4       0.9       0.417  15.6\n12 Short‚Ä¶ Tach‚Ä¶ inse‚Ä¶ Mono‚Ä¶ <NA>                 8.6      NA        NA      15.4\n13 Horse  Equus herbi Peri‚Ä¶ domesticated         2.9       0.6       1      21.1\n14 Three‚Ä¶ Brad‚Ä¶ herbi Pilo‚Ä¶ <NA>                14.4       2.2       0.767   9.6\n15 Macaq‚Ä¶ Maca‚Ä¶ omni  Prim‚Ä¶ <NA>                10.1       1.2       0.75   13.9\n16 Afric‚Ä¶ Loxo‚Ä¶ herbi Prob‚Ä¶ vu                   3.3      NA        NA      20.7\n17 Weste‚Ä¶ Euta‚Ä¶ herbi Rode‚Ä¶ <NA>                14.9      NA        NA       9.1\n18 Tree ‚Ä¶ Tupa‚Ä¶ omni  Scan‚Ä¶ <NA>                 8.9       2.6       0.233  15.1\n19 Lesse‚Ä¶ Cryp‚Ä¶ omni  Sori‚Ä¶ lc                   9.1       1.4       0.15   14.9\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n```\n:::\n:::\n\n\n:::\n\n## \"Desagrupar\"\n\nLas tablas agrupadas por `group_by` retienen el agrupamiento, y para descartarlo usamos `ungroup()`\n\n\n\n::: {.cell output-location='fragment' hash='4-LQNNESR_cache/html/unnamed-chunk-8_1f7bb47bfa6cffb98d9215eea2f4fc82'}\n\n```{.r .cell-code}\nmsleep %>% group_by(order) %>% \n  slice_sample(n=1) %>% ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 √ó 11\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Tenrec Tenr‚Ä¶ omni  Afro‚Ä¶ <NA>                15.6       2.3      NA       8.4\n 2 Cow    Bos   herbi Arti‚Ä¶ domesticated         4         0.7       0.667  20  \n 3 Caspi‚Ä¶ Phoca carni Carn‚Ä¶ vu                   3.5       0.4      NA      20.5\n 4 Bottl‚Ä¶ Turs‚Ä¶ carni Ceta‚Ä¶ <NA>                 5.2      NA        NA      18.8\n 5 Big b‚Ä¶ Epte‚Ä¶ inse‚Ä¶ Chir‚Ä¶ lc                  19.7       3.9       0.117   4.3\n 6 Long-‚Ä¶ Dasy‚Ä¶ carni Cing‚Ä¶ lc                  17.4       3.1       0.383   6.6\n 7 Thick‚Ä¶ Lutr‚Ä¶ carni Dide‚Ä¶ lc                  19.4       6.6      NA       4.6\n 8 Potor‚Ä¶ Poto‚Ä¶ herbi Dipr‚Ä¶ <NA>                11.1       1.5      NA      12.9\n 9 Europ‚Ä¶ Erin‚Ä¶ omni  Erin‚Ä¶ lc                  10.1       3.5       0.283  13.9\n10 Gray ‚Ä¶ Hete‚Ä¶ herbi Hyra‚Ä¶ lc                   6.3       0.6      NA      17.7\n11 Rabbit Oryc‚Ä¶ herbi Lago‚Ä¶ domesticated         8.4       0.9       0.417  15.6\n12 Short‚Ä¶ Tach‚Ä¶ inse‚Ä¶ Mono‚Ä¶ <NA>                 8.6      NA        NA      15.4\n13 Brazi‚Ä¶ Tapi‚Ä¶ herbi Peri‚Ä¶ vu                   4.4       1         0.9    19.6\n14 Three‚Ä¶ Brad‚Ä¶ herbi Pilo‚Ä¶ <NA>                14.4       2.2       0.767   9.6\n15 Mongo‚Ä¶ Lemur herbi Prim‚Ä¶ vu                   9.5       0.9      NA      14.5\n16 Afric‚Ä¶ Loxo‚Ä¶ herbi Prob‚Ä¶ vu                   3.3      NA        NA      20.7\n17 Afric‚Ä¶ Rhab‚Ä¶ omni  Rode‚Ä¶ <NA>                 8.7      NA        NA      15.3\n18 Tree ‚Ä¶ Tupa‚Ä¶ omni  Scan‚Ä¶ <NA>                 8.9       2.6       0.233  15.1\n19 Star-‚Ä¶ Cond‚Ä¶ omni  Sori‚Ä¶ lc                  10.3       2.2      NA      13.7\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n```\n:::\n:::\n\n\n\n## Agrupamiento r√°pido\n\nEn versiones recientes de `dplyr`:\n\n- Agrupar con `.by` o `by`\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-9_7165b007e4a6ee8d72ab4ebdf11e8b2e'}\n\n```{.r .cell-code}\nmsleep %>% slice_sample(n=2, by = order) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 33 √ó 11\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Domes‚Ä¶ Felis carni Carn‚Ä¶ domesticated        12.5       3.2       0.417  11.5\n 2 Jaguar Pant‚Ä¶ carni Carn‚Ä¶ nt                  10.4      NA        NA      13.6\n 3 Galago Gala‚Ä¶ omni  Prim‚Ä¶ <NA>                 9.8       1.1       0.55   14.2\n 4 Slow ‚Ä¶ Nyct‚Ä¶ carni Prim‚Ä¶ <NA>                11        NA        NA      13  \n 5 Thirt‚Ä¶ Sper‚Ä¶ herbi Rode‚Ä¶ lc                  13.8       3.4       0.217  10.2\n 6 Chinc‚Ä¶ Chin‚Ä¶ herbi Rode‚Ä¶ domesticated        12.5       1.5       0.117  11.5\n 7 Great‚Ä¶ Blar‚Ä¶ omni  Sori‚Ä¶ lc                  14.9       2.3       0.133   9.1\n 8 Star-‚Ä¶ Cond‚Ä¶ omni  Sori‚Ä¶ lc                  10.3       2.2      NA      13.7\n 9 Giraf‚Ä¶ Gira‚Ä¶ herbi Arti‚Ä¶ cd                   1.9       0.4      NA      22.1\n10 Roe d‚Ä¶ Capr‚Ä¶ herbi Arti‚Ä¶ lc                   3        NA        NA      21  \n# ‚Ñπ 23 more rows\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n```\n:::\n:::\n\n\n\n\n## Resumiendo valores\n:::{.med-code}\n\n\n::: {.cell output-location='fragment' hash='4-LQNNESR_cache/html/unnamed-chunk-10_1d639b1ff1f55128153caa9eb6818ce6'}\n\n```{.r .cell-code}\nmsleep %>% group_by(order) %>% \n  summarize(mediana_slp = median(sleep_total),\n            media_brainwt=mean(brainwt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 √ó 3\n   order           mediana_slp media_brainwt\n   <chr>                 <dbl>         <dbl>\n 1 Afrosoricida           15.6      0.0026  \n 2 Artiodactyla            3.9     NA       \n 3 Carnivora              10.2     NA       \n 4 Cetacea                 5.2     NA       \n 5 Chiroptera             19.8      0.000275\n 6 Cingulata              17.8      0.0459  \n 7 Didelphimorphia        18.7     NA       \n 8 Diprotodontia          12.4     NA       \n 9 Erinaceomorpha         10.2      0.00295 \n10 Hyracoidea              5.4      0.0152  \n11 Lagomorpha              8.4      0.0121  \n12 Monotremata             8.6      0.025   \n13 Perissodactyla          3.1      0.414   \n14 Pilosa                 14.4     NA       \n15 Primates                9.9     NA       \n16 Proboscidea             3.6      5.16    \n17 Rodentia               12.9     NA       \n18 Scandentia              8.9      0.0025  \n19 Soricomorpha           10.3      0.000592\n```\n:::\n:::\n\n\n:::\n\n## Bucles (_for loops_)\n\n- De gran utilidad\n- No siempre es necesario escribirlos de 0\n\n::: columns\n::: {.column width=\"40%\"}\n![](imgs/Homer.png)\n:::\n\n::: {.column width=\"60%\"}\n::::{.rightref}\n:::{.refbox}\nJenny Bryan\\\n[purrr tutorial](https://jennybc.github.io/purrr-tutorial/index.html)\\\n[Data Rectangling](https://speakerdeck.com/jennybc/data-rectangling)\\\n[purrr workshop](https://speakerdeck.com/jennybc/purrr-workshop)\n:::\n:::\n\n:::\n:::\n\n## Bucles\n\n::: columns\n::: {.column width=\"58%\"}\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-11_ab6847e031f4feebb782659a5e01a11b'}\n\n```{.r .cell-code}\nfor (value in sequence){\n   statement(s)\n}\n```\n:::\n\n\n:::\n\nEjecuta una serie de enunciados (*statements*), una vez para cada elemento de un vector o lista. Se detiene al llegar al √∫ltimo elemento.\n\n:::\n\n::: {.column width=\"42%\"}\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-12_b4aae32c8ff60bacd443760057f4b310'}\n\n```{.r .cell-code}\nfor (x in 1:7){\n  print(x)\n} \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n```\n:::\n:::\n\n\n:::\n:::\n:::\n\n## Ejercicio - _loops_ {background-color=\"#a4c5ff\"}\n\nEscribir un bucle para imprimir en la consola cada letra del alfabeto, en min√∫scula y en orden descendiente (z,y,x,w...)\n</br>\n\n:::{.callout-note}\n##\nhay constantes pre-instaladas en R que les pueden servir\n:::\n\n\n\n## Bucles y grupos\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-13_ae248966bf91e63e0df612a926a19d92'}\n\n```{.r .cell-code}\nmsleep %>% \n  group_by(order) %>% # para cada orden\n  slice_sample(1) # declaraci√≥n a ejecutar \n```\n:::\n\n\n:::\n\nTodo se queda dentro del data frame\n\n## Vectorizaci√≥n \n\nOperaciones que ocurren en paralelo en todos los elementos (de un vector, lista, etc.) y no uno por uno en cada elemento\n\n#### ¬øAqu√≠ qu√© pasa?\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-14_d1d2c78a4e03b92e2412e49f47e7a643'}\n\n```{.r .cell-code}\nx <- c(1,3,12,4,7,8)\nx > 5\n```\n:::\n\n\n:::\n\n\n## Los operadores l√≥gicos (entre muchos otros) son vectorizados\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-15_da36eca0d506319c082d3c3762edc522'}\n\n```{.r .cell-code}\nx <- c(1,3,12,4,7,8)\nx > 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE  TRUE FALSE  TRUE  TRUE\n```\n:::\n:::\n\n\n:::\n\nNo hace falta teclear todo √©sto o escribir un bucle\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-16_95d8a97ff85c1a5a1d1878c46d751ef9'}\n\n```{.r .cell-code}\nx[1]>5 ; x[2]>5\nx[3]>5 ; x[4]>5\nx[5]>5 ; x[6]>5\n```\n:::\n\n\n:::\n\n\n------------------------------------------------------------------------\n\n![American Greetings](imgs/dogscopy.jpg){width=\"36%\" fig-align=\"center\"}\n\n\n\n## Cuando s√≠ necesitemos iterar:\n\n::: columns\n::: {.column width=\"25%\"}\n![](imgs/purrr.jpeg)\n:::\n\n::: {.column width=\"75%\"}\nüì¶ **`purrr`** - Herramientas para programaci√≥n funcional\n\n-   funciones `map` que aplican una funci√≥n a cada elemento de una lista o vector y devuelve un resultado de la misma longitud que la entrada\n\n-   trabaja bien con **listas**\n-   c√≥digo legible y conciso\n:::\n:::\n\n::::{.rightref}\n:::{.refbox}\nThomas Mock (2018)\\\n[Functional Programming in R with purrr](https://towardsdatascience.com/functional-programming-in-r-with-purrr-469e597d0229)\n:::\n:::\n------------------------------------------------------------------------\n\n::: {style=\"text-align: center\"}\n[map(]{style=\"color:blue; font-family: monospace; font-weight: bold;font-size: 1.9em\"}[.x]{style=\"color: red; font-family: Liberation Mono; font-weight: bold;font-size: 1.9em\"}, [.f]{style=\"color: green; font-family: Liberation Mono; font-weight: bold;font-size: 1.9em\"}[, ...)]{style=\"color:blue; font-family: Liberation Mono; font-weight: bold; font-size: 1.9em\"}\n\n</br>\n\npara cada elemento de [.x]{style=\"color: red; font-family: Liberation Mono; font-weight: bold\"}\n\naplica [.f]{style=\"color: green; font-family: Liberation Mono; font-weight: bold\"}\n\n`...` argumentos para [.f]{style=\"color: green; font-family: Liberation Mono; font-weight: bold\"}\n:::\n\n## \"Mapeando\" funciones a datos\n\n</br>\n`map(.x,`[.f]{style=\"color: green; font-family: monospace; font-weight: bold\"}`)`\n\n[.f]{style=\"color: green; font-family: monospace; font-weight: bold\"} se puede especificar como:\n\n:::{.incremental}\n- una funci√≥n existente\n\n- una funci√≥n an√≥nima definida sobre la marcha\n\n- una f√≥rmula: notaci√≥n abreviada para funciones \n\n- una funci√≥n an√≥nima abreviada (_shorthand_) en versiones recientes de R \n:::\n\n## Funciones\n\n![[Learn by Example.com](https://www.learnbyexample.org/r-functions/)](imgs/r-function-syntax.png)\n\n\n## Definiendo funciones\n\nusamos la funci√≥n '`function()`'\n\n`function( arglist ) expr`{style=\"font-size: 1.5em; text-align: center; font-family: monospace; font-weight: bold\"}\n\n</br>\n\n**argumentos** (`arglist`): valores para la funci√≥n\n\n**expresi√≥n** (`expr`): un objeto que representa una acci√≥n que R puede hacer\n\n:::{.callout-note}\n##\nLas expresiones pueden tener una o m√°s declaraciones\n:::\n\n## Definiendo funciones\n\n:::{.med-code}\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-17_74965ae816dfba8564ccf1463537b2ae'}\n\n```{.r .cell-code}\nmi_funcion <- function(mi_argumento){\n  mi_argumento+1 # declaraci√≥n\n}\n\nmi_vector <- c(3,5,6,7)\n\nmi_funcion(mi_argumento = mi_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4 6 7 8\n```\n:::\n:::\n\n\n:::\n\n------------------------------------------------------------------------\n\nEl cuerpo de la funci√≥n (las declaraciones que se ejecutan al correr la funci√≥n) se agrupa con llaves (`{}`)\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-18_dd424ec14a758e169d1e0c37cb4b7011'}\n\n```{.r .cell-code}\nmiFunc <- function(x) {\n  x + 4 # cuerpo\n}\n```\n:::\n\n\n:::\n</br>\n\n::: columns\n::: {.column width=\"35%\"}\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-19_9b65f287abaf827716e1e92953c1ca3a'}\n\n```{.r .cell-code}\nmiFunc(6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\nmiFunc(x=6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n:::\n\n\n:::\n:::\n\n::: {.column width=\"65%\"}\nAl ejecutar funciones es opcional especificar los nombres de los argumentos, pero en funciones con \\>1 argumentos, el orden importa\n:::\n:::\n\n------------------------------------------------------------------------\n\n**PERO** no hacen falta llaves para funciones con una sola declaraci√≥n\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-20_20d42b2e621a8be3dceedc085574acd5'}\n\n```{.r .cell-code}\nf <- function(x) x+4   \nf(x=6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n:::\n\n\n:::\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-21_fded8d9833cc45515b780ddae8d39e50'}\n\n```{.r .cell-code}\nf <- function(x) mean(x)/2   \nf(c(6,43,12,5,7))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7.3\n```\n:::\n:::\n\n\n:::\n\n------------------------------------------------------------------------\n\nLas llaves rodean el cuerpo en funciones con dos o m√°s declaraciones\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-22_f5ec4748fc4a205c96d883314741325a'}\n\n```{.r .cell-code}\nf <- function(x)  y <- (x*0.2885) log(y) # ERROR  \n```\n:::\n\n\n:::\n\nAs√≠ s√≠ funciona. Las declaraciones (statements) est√°n en l√≠neas separadas\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-23_af968ad3e3bb647369a5cebcb1486bbb'}\n\n```{.r .cell-code}\nf <- function(x) {\n  y <- (x*0.2885) # una declaraci√≥n\n  log(y)          # otra declaraci√≥n\n}\n\nf(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3663777\n```\n:::\n:::\n\n\n:::\n\n## Funci√≥n sin argumentos\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-24_8f49ecabdf969da05dbab39afb442d42'}\n\n```{.r .cell-code}\nqueHoraEs <- function(){\nformat(Sys.time(), \"%H:%M\")\n}\nqueHoraEs()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"12:46\"\n```\n:::\n:::\n\n\n\n## Funciones an√≥nimas\n\n**Funciones para llevar** (se crean y se ejecutan pero nunca se asignan a un objeto con nombre)\n\n### Sintaxis\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-25_21b720b1ed7b9d5c80af0d5b5b135eb0'}\n\n```{.r .cell-code}\n(function(x) x * x + 3)(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 103\n```\n:::\n:::\n\n\n:::\n\n\nLa definici√≥n va entre par√©ntesis para separar la funci√≥n de sus argumentos\n\n------------------------------------------------------------------------\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-26_4d3b5cb03984bffd4ff6206d74604eb3'}\n\n```{.r .cell-code}\n(function(x) x + 3)(10)\n```\n:::\n\n\n:::\n\nEs lo mismo que:\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-27_be57bd9167ebf43e8ff71535b443449d'}\n\n```{.r .cell-code}\nf <- function(x) x + 3\nf(10)\n# o bien \nf <- function(x) {x + 3}\nf(10)\n```\n:::\n\n\n:::\n\n## Notation corta (desde R v4.1.0)\n\nReemplaza \"`function(x) {}`\" con \"`\\(x){}`\"\n\n:::{.big-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-28_00652e9877c5bc49d83849bf0b2e026e'}\n\n```{.r .cell-code}\n(\\(x) x + 3)(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13\n```\n:::\n\n```{.r .cell-code}\n(\\(x) x / 2)(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\n:::\n\n\n::::{.rightref}\n:::{.refbox}\nRuss Hyde (2021)\\\n[New features in R 4.1.0](https://www.jumpingrivers.com/blog/new-features-r410-pipe-anonymous-functions/)\n:::\n:::\n\n:::{.callout-note}\n## \nLos desarrolladores del `tidyverse` est√°n migrando al uso de esta notaci√≥n\n:::\n\n\n## Funciones an√≥nimas\n\n- √ötiles para aplicar una funci√≥n personalizada a varios elementos a la vez\n\n- Tambi√©n conocidas como  *expresiones lambda*\n\n- Autocontenidas\n\n- Comparables con m√©todos parecidos en Python\n\n## Por qu√© escribir nuestras propias funciones\n\n- Menos repetici√≥n  \n\n- Mayor brevedad  \n\n- Menor posibilidad de errores \n\n- Aprovechar las herramientas que nos dejan aplicar funciones a muchos elementos a la vez\n\n::::{.rightref}\n:::{.refbox}\nJenny Bryan - Stat545\\\n[Write your own R functions](https://stat545.com/functions-part1.html)\n:::\n:::\n\n# Listas\n\n## Listas \n\nObjetos que pueden contener elementos de diferentes tipos como n√∫meros, cadenas de texto, vectores, tablas, o incluso m√°s listas\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-29_e82866c2d584f3bb697f31d72a006708'}\n\n```{.r .cell-code}\nmi_lista <- list(\n  un_numero = 7,\n  un_vector = c(\"rata\", \"gato\", \"taco\"),\n  un_dataframe = data.frame(\n    a = 1:3, b = c(\"K\", \"L\", \"M\")))\n```\n:::\n\n\n:::\n\n::::{.rightref}\n:::{.refbox}\nRebecca Barter (2019)\\\n[Learn to purrr](https://www.rebeccabarter.com/blog/2019-08-19_purrr/)\n:::\n:::\n\n------------------------------------------------------------------------\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-30_b8acf4343f76e5ae30ee3742e54d4adf'}\n\n```{.r .cell-code}\nmi_lista\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$un_numero\n[1] 7\n\n$un_vector\n[1] \"rata\" \"gato\" \"taco\"\n\n$un_dataframe\n  a b\n1 1 K\n2 2 L\n3 3 M\n```\n:::\n:::\n\n\n:::\n\n\n\n## Podemos creas listas partiendo otros objetos\n\nSeparando una data frame agrupada en una lista de data frames, una para cada grupo.\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-31_24f22dbdd9ab6cefd7a917e7c74c5511'}\n\n```{.r .cell-code}\ngremios <- \n  msleep %>% group_by(vore) %>%\n  group_split()\n```\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-32_91e64c904bac835333fab1d108902bab'}\n\n```{.r .cell-code}\ngremios\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<list_of<\n  tbl_df<\n    name        : character\n    genus       : character\n    vore        : character\n    order       : character\n    conservation: character\n    sleep_total : double\n    sleep_rem   : double\n    sleep_cycle : double\n    awake       : double\n    brainwt     : double\n    bodywt      : double\n  >\n>[5]>\n[[1]]\n# A tibble: 19 √ó 11\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Cheet‚Ä¶ Acin‚Ä¶ carni Carn‚Ä¶ lc                  12.1      NA        NA      11.9\n 2 North‚Ä¶ Call‚Ä¶ carni Carn‚Ä¶ vu                   8.7       1.4       0.383  15.3\n 3 Dog    Canis carni Carn‚Ä¶ domesticated        10.1       2.9       0.333  13.9\n 4 Long-‚Ä¶ Dasy‚Ä¶ carni Cing‚Ä¶ lc                  17.4       3.1       0.383   6.6\n 5 Domes‚Ä¶ Felis carni Carn‚Ä¶ domesticated        12.5       3.2       0.417  11.5\n 6 Pilot‚Ä¶ Glob‚Ä¶ carni Ceta‚Ä¶ cd                   2.7       0.1      NA      21.4\n 7 Gray ‚Ä¶ Hali‚Ä¶ carni Carn‚Ä¶ lc                   6.2       1.5      NA      17.8\n 8 Thick‚Ä¶ Lutr‚Ä¶ carni Dide‚Ä¶ lc                  19.4       6.6      NA       4.6\n 9 Slow ‚Ä¶ Nyct‚Ä¶ carni Prim‚Ä¶ <NA>                11        NA        NA      13  \n10 North‚Ä¶ Onyc‚Ä¶ carni Rode‚Ä¶ lc                  14.5      NA        NA       9.5\n11 Tiger  Pant‚Ä¶ carni Carn‚Ä¶ en                  15.8      NA        NA       8.2\n12 Jaguar Pant‚Ä¶ carni Carn‚Ä¶ nt                  10.4      NA        NA      13.6\n13 Lion   Pant‚Ä¶ carni Carn‚Ä¶ vu                  13.5      NA        NA      10.5\n14 Caspi‚Ä¶ Phoca carni Carn‚Ä¶ vu                   3.5       0.4      NA      20.5\n15 Commo‚Ä¶ Phoc‚Ä¶ carni Ceta‚Ä¶ vu                   5.6      NA        NA      18.4\n16 Bottl‚Ä¶ Turs‚Ä¶ carni Ceta‚Ä¶ <NA>                 5.2      NA        NA      18.8\n17 Genet  Gene‚Ä¶ carni Carn‚Ä¶ <NA>                 6.3       1.3      NA      17.7\n18 Arcti‚Ä¶ Vulp‚Ä¶ carni Carn‚Ä¶ <NA>                12.5      NA        NA      11.5\n19 Red f‚Ä¶ Vulp‚Ä¶ carni Carn‚Ä¶ <NA>                 9.8       2.4       0.35   14.2\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n\n[[2]]\n# A tibble: 32 √ó 11\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Mount‚Ä¶ Aplo‚Ä¶ herbi Rode‚Ä¶ nt                  14.4       2.4      NA       9.6\n 2 Cow    Bos   herbi Arti‚Ä¶ domesticated         4         0.7       0.667  20  \n 3 Three‚Ä¶ Brad‚Ä¶ herbi Pilo‚Ä¶ <NA>                14.4       2.2       0.767   9.6\n 4 Roe d‚Ä¶ Capr‚Ä¶ herbi Arti‚Ä¶ lc                   3        NA        NA      21  \n 5 Goat   Capri herbi Arti‚Ä¶ lc                   5.3       0.6      NA      18.7\n 6 Guine‚Ä¶ Cavis herbi Rode‚Ä¶ domesticated         9.4       0.8       0.217  14.6\n 7 Chinc‚Ä¶ Chin‚Ä¶ herbi Rode‚Ä¶ domesticated        12.5       1.5       0.117  11.5\n 8 Tree ‚Ä¶ Dend‚Ä¶ herbi Hyra‚Ä¶ lc                   5.3       0.5      NA      18.7\n 9 Asian‚Ä¶ Elep‚Ä¶ herbi Prob‚Ä¶ en                   3.9      NA        NA      20.1\n10 Horse  Equus herbi Peri‚Ä¶ domesticated         2.9       0.6       1      21.1\n# ‚Ñπ 22 more rows\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n\n[[3]]\n# A tibble: 5 √ó 11\n  name    genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n  <chr>   <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n1 Big br‚Ä¶ Epte‚Ä¶ inse‚Ä¶ Chir‚Ä¶ lc                  19.7       3.9       0.117   4.3\n2 Little‚Ä¶ Myot‚Ä¶ inse‚Ä¶ Chir‚Ä¶ <NA>                19.9       2         0.2     4.1\n3 Giant ‚Ä¶ Prio‚Ä¶ inse‚Ä¶ Cing‚Ä¶ en                  18.1       6.1      NA       5.9\n4 Easter‚Ä¶ Scal‚Ä¶ inse‚Ä¶ Sori‚Ä¶ lc                   8.4       2.1       0.167  15.6\n5 Short-‚Ä¶ Tach‚Ä¶ inse‚Ä¶ Mono‚Ä¶ <NA>                 8.6      NA        NA      15.4\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n\n[[4]]\n# A tibble: 20 √ó 11\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   <chr>  <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n 1 Owl m‚Ä¶ Aotus omni  Prim‚Ä¶ <NA>                17         1.8      NA       7  \n 2 Great‚Ä¶ Blar‚Ä¶ omni  Sori‚Ä¶ lc                  14.9       2.3       0.133   9.1\n 3 Grivet Cerc‚Ä¶ omni  Prim‚Ä¶ lc                  10         0.7      NA      14  \n 4 Star-‚Ä¶ Cond‚Ä¶ omni  Sori‚Ä¶ lc                  10.3       2.2      NA      13.7\n 5 Afric‚Ä¶ Cric‚Ä¶ omni  Rode‚Ä¶ <NA>                 8.3       2        NA      15.7\n 6 Lesse‚Ä¶ Cryp‚Ä¶ omni  Sori‚Ä¶ lc                   9.1       1.4       0.15   14.9\n 7 North‚Ä¶ Dide‚Ä¶ omni  Dide‚Ä¶ lc                  18         4.9       0.333   6  \n 8 Europ‚Ä¶ Erin‚Ä¶ omni  Erin‚Ä¶ lc                  10.1       3.5       0.283  13.9\n 9 Patas‚Ä¶ Eryt‚Ä¶ omni  Prim‚Ä¶ lc                  10.9       1.1      NA      13.1\n10 Galago Gala‚Ä¶ omni  Prim‚Ä¶ <NA>                 9.8       1.1       0.55   14.2\n11 Human  Homo  omni  Prim‚Ä¶ <NA>                 8         1.9       1.5    16  \n12 Macaq‚Ä¶ Maca‚Ä¶ omni  Prim‚Ä¶ <NA>                10.1       1.2       0.75   13.9\n13 Chimp‚Ä¶ Pan   omni  Prim‚Ä¶ <NA>                 9.7       1.4       1.42   14.3\n14 Baboon Papio omni  Prim‚Ä¶ <NA>                 9.4       1         0.667  14.6\n15 Potto  Pero‚Ä¶ omni  Prim‚Ä¶ lc                  11        NA        NA      13  \n16 Afric‚Ä¶ Rhab‚Ä¶ omni  Rode‚Ä¶ <NA>                 8.7      NA        NA      15.3\n17 Squir‚Ä¶ Saim‚Ä¶ omni  Prim‚Ä¶ <NA>                 9.6       1.4      NA      14.4\n18 Pig    Sus   omni  Arti‚Ä¶ domesticated         9.1       2.4       0.5    14.9\n19 Tenrec Tenr‚Ä¶ omni  Afro‚Ä¶ <NA>                15.6       2.3      NA       8.4\n20 Tree ‚Ä¶ Tupa‚Ä¶ omni  Scan‚Ä¶ <NA>                 8.9       2.6       0.233  15.1\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n\n[[5]]\n# A tibble: 7 √ó 11\n  name    genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n  <chr>   <chr> <chr> <chr> <chr>              <dbl>     <dbl>       <dbl> <dbl>\n1 Vesper‚Ä¶ Calo‚Ä¶ <NA>  Rode‚Ä¶ <NA>                 7        NA        NA      17  \n2 Desert‚Ä¶ Para‚Ä¶ <NA>  Erin‚Ä¶ lc                  10.3       2.7      NA      13.7\n3 Deer m‚Ä¶ Pero‚Ä¶ <NA>  Rode‚Ä¶ <NA>                11.5      NA        NA      12.5\n4 Phalan‚Ä¶ Phal‚Ä¶ <NA>  Dipr‚Ä¶ <NA>                13.7       1.8      NA      10.3\n5 Rock h‚Ä¶ Proc‚Ä¶ <NA>  Hyra‚Ä¶ lc                   5.4       0.5      NA      18.6\n6 Mole r‚Ä¶ Spal‚Ä¶ <NA>  Rode‚Ä¶ <NA>                10.6       2.4      NA      13.4\n7 Musk s‚Ä¶ Sunc‚Ä¶ <NA>  Sori‚Ä¶ <NA>                12.8       2         0.183  11.2\n# ‚Ñπ 2 more variables: brainwt <dbl>, bodywt <dbl>\n```\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-33_f239abd431118297f536936508ed2989'}\n\n```{.r .cell-code}\nclass(gremios)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"vctrs_list_of\" \"vctrs_vctr\"    \"list\"         \n```\n:::\n:::\n\n\n\n##\n\n`group_keys()` regresa los grupos\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-34_d46ee3bbc4490a31ed76eef82517aa8e'}\n\n```{.r .cell-code}\nmsleep %>% group_by(vore) %>%\n  group_keys()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 √ó 1\n  vore   \n  <chr>  \n1 carni  \n2 herbi  \n3 insecti\n4 omni   \n5 <NA>   \n```\n:::\n:::\n\n\n:::\n\n## 'Indexando' listas\n\n![Hadley Wickam (2015) en [Twitter](https://twitter.com/hadleywickham/status/643381054758363136?s=20&t=0Gu4Qs757o5KHEJR2ZwkEg)](imgs/listspepper.png){width=\"76%\"}\n\n## Accediendo a elementos de listas\n\nPrimer elemento (`[[1]]`)\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-35_fb4cdc072b2af6b24e76ae9951710fee'}\n\n```{.r .cell-code}\ngremios[[1]] %>% \n  select(name,genus) %>% head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 2\n  name                 genus        \n  <chr>                <chr>        \n1 Cheetah              Acinonyx     \n2 Northern fur seal    Callorhinus  \n3 Dog                  Canis        \n4 Long-nosed armadillo Dasypus      \n5 Domestic cat         Felis        \n6 Pilot whale          Globicephalus\n```\n:::\n:::\n\n\n\n\n## Segundo elemento\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-36_6669772b7fdb74d104d887aa7f219573'}\n\n```{.r .cell-code}\ngremios[[2]] %>% \n  select(name,genus, vore, conservation) %>% \n  head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 4\n  name             genus      vore  conservation\n  <chr>            <chr>      <chr> <chr>       \n1 Mountain beaver  Aplodontia herbi nt          \n2 Cow              Bos        herbi domesticated\n3 Three-toed sloth Bradypus   herbi <NA>        \n4 Roe deer         Capreolus  herbi lc          \n5 Goat             Capri      herbi lc          \n6 Guinea pig       Cavis      herbi domesticated\n```\n:::\n:::\n\n\n\n##\n\n![](imgs/purrrPost.png)\n\n\n::: {style=\"text-align: right\"}\nLuis (2017)\\\n[Export Iteratively](https://luisdva.github.io/rstats/export-iteratively/)\n:::\n\n## ¬øPara qu√© usar listas?\n\n- Clase vers√°til para almacenar varios tipos de objetos\n\n- F√°ciles de crear partiendo otros objetos\n\n- Cada elemento puede tener nombre\n\n## 'Mapeo' de funciones a datos\n\n- Aplicar funciones iterativamente\n\n- Importar varios archivos en un solo comando\n\n- Modificar y/o exportar m√∫ltiples objetos\n\n## Aplicar funciones iterativamente\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-37_d273c3daecd6f000706a3bac390b5ab0'}\n\n```{.r .cell-code}\nlibrary(datos)\nlibrary(purrr)\n# tres vectores (num√©ricos)\nmasa <- pinguinos$masa_corporal_g\npico <- pinguinos$largo_pico_mm\naleta <- pinguinos$largo_aleta_mm\n# juntarlos en una lista\nrasgos <- list(masa,pico,aleta)\n# aplicar la funci√≥n \"mean\" a cada elemento\nmap(rasgos,mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] NA\n\n[[2]]\n[1] NA\n\n[[3]]\n[1] NA\n```\n:::\n:::\n\n\n## \n\n### con argumentos adicionales\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-38_f02dd8346f1204c6a0de49fd64c4cb49'}\n\n```{.r .cell-code}\n# aplicar la funci√≥n \"mean\" a cada elemento\nmap(rasgos,mean,na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] 4201.754\n\n[[2]]\n[1] 43.92193\n\n[[3]]\n[1] 200.9152\n```\n:::\n:::\n\n\n\n## Aplicar funciones personalizadas iterativamente\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-39_cda8cf0bdf4a34f2b568f20353273a93'}\n\n```{.r .cell-code}\n# obtener min, max, y la diferencia\nresumenMMR <- function(x){\n  min_x <- min(x,na.rm = TRUE)\n  max_x <- max(x,na.rm = TRUE)\n  maxmin <- max_x - min_x\n  c(min_x, max_x, maxmin)\n}\n```\n:::\n\n\n:::\n\n## Probar con vectores\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-40_ed2eb2bd97291607695e585a255b0e46'}\n\n```{.r .cell-code}\nresumenMMR(masa)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2700 6300 3600\n```\n:::\n\n```{.r .cell-code}\nresumenMMR(aleta)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 172 231  59\n```\n:::\n:::\n\n\n:::\n\n## `map()` para aplicar nuestra funci√≥n a la lista\n\n:::{.callout-note}\n##\nSolo usamos el nombre de la funci√≥n\n:::\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-41_b0fa19463ef8806dbb8f50d8663d0cf2'}\n\n```{.r .cell-code}\nmap(.x = rasgos, .f = resumenMMR)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] 2700 6300 3600\n\n[[2]]\n[1] 32.1 59.6 27.5\n\n[[3]]\n[1] 172 231  59\n```\n:::\n:::\n\n\n:::\n\n\n## `map()` con salidas espec√≠ficas\n\n`map()` regresa listas\n\n`map_lgl()` regresa un vector T/F\n\n`map_int()` regresa un vector num√©rico\n\n`map_dbl()` regresa un vector num√©rico (con decimales)\n\n`map_chr()` regresa un vector de caracteres\n\n`map_df()` junta todo en un data frame\n\n##\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-42_8ea15fad83aae6fc34d8316fac074391'}\n\n```{.r .cell-code}\n# regresa una lista\nmap(rasgos, median, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] 4050\n\n[[2]]\n[1] 44.45\n\n[[3]]\n[1] 197\n```\n:::\n\n```{.r .cell-code}\n# aplana la lista en un vector\nmap_dbl(rasgos, median, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4050.00   44.45  197.00\n```\n:::\n:::\n\n\n:::\n\n## `map()` con funciones an√≥nimas\n\nFunciones que podemos escribir dentro de `map()` sin definir\n\n\n::::{.rightref}\n:::{.refbox}\nMike Cheng (2019)\\\n[Anonymous Functions in R - Part 1](https://coolbutuseless.github.io/2019/03/13/anonymous-functions-in-r-part-1/)\n:::\n:::\n\n## \n\nMismo comportamiento\n\n:::{.med-code}\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-43_65e85c84c2796638ddf92c7cc0eb8c8f'}\n\n```{.r .cell-code}\nlistaNums <- list(c(5:10),c(20:27))\n# funci√≥n an√≥nima\nmap(listaNums, function(x) x+2)\n# f√≥rmula\nmap(listaNums, ~ .x + 2)\n# notaci√≥n 'nueva'\nmap(listaNums,\\(x) x+2)\n```\n:::\n\n\n:::\n\n------------------------------------------------------------------------\n\nEn notaci√≥n de f√≥rmula (usando `~`):\n\n`.x` siempre se refiere al elemento del vector o lista con el que estamos iterando\n\nInternamente `~.x + 4` se vuelve `function(x) x+4`\n\n## Importando o escribiendo muchos archivos\n\n[map(.x,.f)]{style=\"font-size: 1.5em; text-align: center; font-family: monospace\"}\n\n`.x` puede ser una lista o vector de rutas de archivo\n\n`.f` puede ser una funci√≥n que lee o escribe archivos\n\n:::{style=\"text-align: center\"}\nüìÑüìÑüìÑüìÑüìÑüìÑüìÑüìÑüìÑ\n:::\n\n## Ejercicio {background-color=\"#a4c5ff\"}\n\n### Crear una carpeta llena de archivos de texto\n\n- cargar el archivo `resultados_21k.csv`\n\n- agrupar los datos por localidad y crear una lista de data frames con una para cada localidad\n\n- crear un vector con los nombres de las localidades\n\n:::{.callout-note}\n##\n üò≤ es posible iterar con dos _inputs_ en paralelo\n:::\n\n## `map()` con dos inputs\n\n[`map2(.x, .y, .f)`]{style=\"font-size: 1.5em; text-align: center; font-family: monospace\"}\n\nAmbas listas de vectores de entrada se le pasan como argumentos a la funci√≥n `.f`\n\n![](imgs/map2.png){width=\"87%\"}\n\n::::{.rightref}\n:::{.refbox}\nAltman et al. (2021)\\\n[Map with multiple inputs](https://dcl-prog.stanford.edu/purrr-parallel.html)\n:::\n:::\n\n## Ejercicio - Carpeta con archivos {background-color=\"#a4c5ff\"}\n\n-   crear una carpeta \"resultados21k\" \n\n-   usar `here()` para crear rutas estables y port√°tiles para cada localidad, por ejemplo: `here(\"datos\",\"resultados21k\",\"Usaquen\")`, teniendo en cuenta que `here()` es una funci√≥n vectorizada\n\n-   pasar la lista de data frames y el vector de rutas a `write_csv` de `readr` o `write.csv` de R base\n\nüî•üèÉüî•\n\n## Ejercicio - Importando varios archivos a la vez {background-color=\"#a4c5ff\"}\n\n- usar `dir_ls()` para crear un vector con las rutas de los archivos creados en el paso anterior\n\n- importar cada elemento de este vector con `map()` y `read_csv()` de `readr`\n\n- usar funciones con regresos espec√≠ficos para terminar con la tabla inicial\n\n\n# Atajos y herramientas para mayor eficiencia  \n\n##\n\n\n![](imgs/remote-work-airplane-laptop.jpg)\n\n## Programando eficientemente\n\n[Ctrl == ‚åò Command && Alt == ‚å• Option]{style=\"font-size: 1.5em; text-align: center\"}\n\n- cursor multilinea (`ctrl`+`alt`+`arriba`) o (`ctrl`+`alt`+`abajo`)\n- quitar con `esc`\n\n## Atajos de teclado\n\n-   panel de atajos (`alt`+`shift`+`k`)\n-   insertar 'pipe' (`ctrl`+`shift`+`m`)\n-   operador de asignaci√≥n (`alt`+`-`)\n-   arrastrar l√≠nea (`alt`+`up`) o (`alt`+`down`)\n-   ejecutar l√≠nea (`ctrl`+`enter`)\n-   indentar o 'desindentar' selecci√≥n (`tab` y `shift`+`tab`)\n-   convertir selecci√≥n a comentario (`ctrl` + `shift` + `c`)\n\n::::{.rightref}\n:::{.refbox}\n[RStudio Shortcuts and Tips (2021)](https://appsilon.com/rstudio-shortcuts-and-tips/)\n:::\n:::\n\n## Atajos √∫tiles\n\n-   Cambiar enfoque entre paneles\n    -   (`ctrl`+`1` hasta `8`)\n    -   Maximizar paneles con (`ctrl`+`shift`+`1` hasta `8`)\n\n![](imgs/movingfocus.gif){width=\"48%\"}\n\n## M√°s atajos\n\nModificar selecci√≥n [`ctrl`+`alt`+`shift`+`m`]{style=\"color: orange\"}\n\nPara acceder a la documentaci√≥n [?]{style=\"color: orange\"} o [F1]{style=\"color: orange\"}\n\nAbriendo objetos en el visualizador\n\n[`ctrl` + click]{style=\"color: orange\"}\n\nEjecutar de nuevo la √∫ltima l√≠nea  \n\n[`ctrl` + Alt + P]{style=\"color: orange\"}\n\n### Abrir el directorio de trabajo \n[`shell.exec(getwd())`]{style=\"color: orange\"} en Windows y en Linux [`browseURL(getwd())`]{style=\"color: orange\"}\n\n\n## Pr√°ctica {background-color=\"#a4c5ff\"}\n\nExploremos la diversidad de paquetes que hay en CRAN hoy mismo:\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-44_62966aadb354f1c49906117afda5f4f4'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\np_db <- tools::CRAN_package_db()\np_db <- p_db %>% select(Package, Author, Description, Title)\n```\n:::\n\n\n\n\n\n## üì¶ [`annotater`](https://annotater.liomys.mx)\n\n\nAgregar detalles sobre los paquetes que estamos mencionando en nuestros scripts\n\nFuente y versi√≥n\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-45_9b5677a1a6ff268f9243868b16a11601'}\n\n```{.r .cell-code}\nlibrary(dplyr)   # CRAN v1.0.7\nlibrary(janitor) # CRAN v2.1.0\n```\n:::\n\n\n\nT√≠tulo, fuente y versi√≥n\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-46_2b05a7d65b5c224b6c93c96d4f1c14fa'}\n\n```{.r .cell-code}\nlibrary(readr) # Read Rectangular Text Data, CRAN v2.0.2\n```\n:::\n\n\n\n-   *Tambi√©n podemos anotar cu√°les funciones o datos de c/ paquete estamos usando*\n\n## üì¶ [`littleboxes`](https://github.com/ThinkR-open/littleboxes)\n\n\n\nCajas para t√≠tulos\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-47_e76d2f340fbbf3bae2c270fd08220604'}\n\n```{.r .cell-code}\n##%##################################################%##\n#                                                      #\n####    Mi an√°lisis en R ,  Luis, Oct 2022          ####\n#                                                      #\n##%##################################################%##\n```\n:::\n\n\n\n## üì¶ `packup`\n\nhttps://github.com/MilesMcBain/packup\n\nAcomoda los llamados a `library()` al principio del archivo, quitando duplicados y ordenando alfab√©ticamente.\n\n> El orden alfab√©tico puede no ser adecuado\n\n\n## Secciones de c√≥digo y el esquema de documento\n\n\n\n::: {.cell hash='4-LQNNESR_cache/html/unnamed-chunk-48_2334a4514a42144c5068374ffeb7d817'}\n\n```{.r .cell-code}\n# Mi secci√≥n nueva ------------------------------------ \n```\n:::\n\n\n\nDividir un script en segmentos discretos\n\nLas secciones se pueden colapsar y funcionan con el panel de navegaci√≥n del editor de fuente.\n\n-   Crear con cuatro guiones despu√©s de un comentario\n-   Insertar con `ctrl` + `shift` + `R`\n\n## Utilidades geniales\n\n### üì¶ [`datapasta`](https://milesmcbain.github.io/datapasta/)\n\nCopiar y pegar datos desde y hacia R, manipular vectores\n\n![](imgs/tribble_paste.gif){width=\"48%\"}\n\n# Errores comunes y como solucionarlos\n\n## 1 - **Resetear**\n\nReiniciar R (limpia la ruta de b√∫squeda, \"desprende\" objetos, regresa opciones a sus valores predeterminados) \n\n:::{.callout-note}\n##\n_search path_: los entornos que definen los objetos y funciones a los que podemos acceder desde el entorno de trabajo global\n:::\n\n### prueba\n(e.g. `Sys.setenv(LANGUAGE=\"ko\"`))\n\n## 2 - **Reprex** (ejemplos reproducibles)\n\nCrear el ejemplo m√°s simple posible que genere el mismo error para poder confirmar o resolver alg√∫n problema\n\n- Proporcionar datos\n- Acotarse al problema  \n- Paquetes, versiones, OS\n- Que otras personas pueda copiar, pegar,   y ejecutar\n\n::::{.rightref}\n:::{.refbox}\nJenny Bryan (2020)\\\n[Object of type 'closure' is not subsettable](https://www.rstudio.com/resources/rstudioconf-2020/object-of-type-closure-is-not-subsettable/)\n:::\n::::\n\n## Errores comunes\n\n- paquetes sin cargar o cargados en desorden (search path)\n- operadores cambiados, signos\n- espacios, par√©ntesis, o comas de m√°s o de menos\n- pasos en desorden\n\n## Opciones √∫tiles\n- Estudiar los mensajes de error m√°s comunes\n\n::::{.rightref}\n:::{.refbox}\nEmily Jennings-Dobbs (2021)\\\n[Common Errors in R](https://jtr13.github.io/cc21/common-errors-in-r.html)\n:::\n::::\n\n- Correr los ejemplos disponibles con la ayuda y comparar con nuestro c√≥digo\n\n\n# Buscando ayuda\n\n## Otras personas\n\nForos \n\nGrupos de usuarios locales o de RLadies\n\n[StackOverflow](https://stackoverflow.com/)\n\nRedes sociales  \n\n[GitHub](https://github.com/) - issues (cerrados o abiertos)\n\n - üßê Modales!\n\n## B√∫squedas web\n\nNadie sabe todo de memoria y hay que saber buscar en l√≠nea\n\n- Aprender a usar funciones avanzadas en los buscadores populares [\"Google-fu\"](https://tryhackme.com/resources/blog/google-fu) \n\n- Conocer la terminolog√≠a general\\\n    [*\"R subset rows partial match\"*]{style=\"color: orange\"}\n\n- Hacer b√∫squedas amplias (ej: no buscar partes de un mensaje que error que a nadie m√°s le aparecer√≠an)\n\n[Error: object 'tesis_luis_23w-final' not found]{style=\"color: red; font-family: monospace\"}\n\n## ¬øCu√°les soluciones son ~~mejores~~ √∫tiles?\n\n- ¬øHace falta limitar los resultados temporalmente?\n\n- Soluciones para diferentes dialectos\\\n    [Sort (order) data frame rows by multiple columns](https://stackoverflow.com/questions/1296646/sort-order-data-frame-rows-by-multiple-columns)\\\n    (StackOverflow - 2009, 1.4 M visitas)\n\n# Discusi√≥n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}