{
  "hash": "336ed38ce43741ec00606bdf861e8fc2",
  "result": {
    "markdown": "---\ntitle: \"Mapas bivariados\"\nauthor: \"Gabriel Massaine Moulatlet & Fabricio Villalobos\"\ninstitute: Instituto de Ecología, A.C.\nformat: \n  revealjs:\n    theme: curso_styles.scss\n    slide-number: true\n    embed-resources: true\neditor: visual\nhighlight-style: arrow-light\n---\n\n\n## Paquetes\n\nVamos a utilizar los siguientes paquetes:\n\n- `biscale`\n-  `ggplot2`\n\n## Biscale\n\n::: columns\n::: {.column width=\"20%\"}\n![](imgs/biscale.png)\n:::\n\n::: {.column width=\"80%\"}\n-   Paquete para producir mapas bivariados (i.e. dos variables en el mismo layout)\n    -   Sirve para producir leyendas bivariadas\n    -   Herramientas para classificación de datos en categorías usando diferentes técnicas\n    -   [Documentación](https://chris-prener.github.io/biscale/index.html)\n:::\n:::\n\n## Según Wikipedia...\n\n-   Mapas bivariados también son conocidos como *Mapa coropleto* o *Mapa de coropletas*\n\n> Mapa temático en el que las áreas se sombrean de distintos colores, frecuentemente de la misma gama cromática, que representan distintos valores de una variable estadística característica.\n\n## Dos o más variables...\n\n-   Los mapas bivariados son útiles para graficar dos variables\n-   Ajuste de colores, transparencias y formas\n\n![](https://www.joshuastevens.net/images/js_finalBivariateMap.png) \n\n## Son bastante comunes para reportar resultados de elecciones\n\n![](imgs/para.png){fig-align=\"center\"}\n\n## También para reportar indicadores socio-económicos\n\n![](imgs/dengue.png){fig-align=\"center\"}\n\n## Hay otros ejemplos: colores y marcaciones\n\n![](imgs/tabaco.png){fig-align=\"center\"} \n\n## Hay otros ejemplos: colores y area ![](imgs/happy.png){fig-align=\"center\"} \n\n## Leyendas triangulares - Tres variables [Sabatini et al. 2022](https://onlinelibrary.wiley.com/doi/full/10.1111/ddi.13158) ![](imgs/sabatini.jpg){fig-align=\"center\"}\n\n## Formatos complejos\n\n[Sabatini et al. 2022](https://onlinelibrary.wiley.com/doi/full/10.1111/ddi.13158) ![](imgs/forest.jpg){fig-align=\"center\"} \\## Mapas RGB\n\n![](imgs/dengue3.png){fig-align=\"center\"}\n\n## Leyendas rectangulares con varias categorias\n\n[Peixoto et al. 2017](https://onlinelibrary.wiley.com/doi/abs/10.1111/geb.12561) ![](imgs/peixoto.png){fig-align=\"center\"}\n\n## Pero lo más importante es que la información esté clara\n\n-   ¿Cuál de los dos mapas transmite mejor la información?   \n![](imgs/dengue2.png){fig-align=\"center\"}\n\n# Producir mapas bivariados\n\n## Teoría:\n\n-   La idea central es buscar una manera de como combinar estas dos variables\n\n-   Escalas diferentes, número diferente de categorías etc...\n-   Los mapas bivariados conllevan dos pasos:\n    1.  Categorización de las variables según alguna estadística\n    2.  Preparación de una leyenda y su \"paleta\" de colores\n\n# 1. Categorización de variables\n\n## Pasos:\n\n-   Normalizar los datos en conteos o proporciones\n-   las funciones `cut()` y `summary()` de R base pueden ser útiles (revisar también `santoku`)\n-  Con los datos *iris*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.300   5.100   5.800   5.843   6.400   7.900 \n```\n:::\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\n\n# Categorizar de acuerdo a los quantiles\nci = cut(iris$Sepal.Length,\n         breaks = c(4.3,5.1,5.8,6.4, max(iris$Sepal.Length)))\n\n# Explorar los resultados\ntabyl(ci)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        ci  n     percent valid_percent\n (4.3,5.1] 40 0.266666667     0.2684564\n (5.1,5.8] 39 0.260000000     0.2617450\n (5.8,6.4] 35 0.233333333     0.2348993\n (6.4,7.9] 35 0.233333333     0.2348993\n      <NA>  1 0.006666667            NA\n```\n:::\n:::\n\n\n## la función `classIntervals()`\n\n-   Permite categorizar los datos usando varios tipos de categorización\n-   *quantile*, *jenkins*, *equal* para mencionar algunas\n-   hay que definir el numero de clases (parámetro *n*)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(classInt)\n\nclassInt::classIntervals(iris$Sepal.Length,style=\"quantile\",n=4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nstyle: quantile\n  one of 5,984 possible partitions of this variable into 4 classes\n[4.3,5.1) [5.1,5.8) [5.8,6.4) [6.4,7.9] \n       32        41        35        42 \n```\n:::\n:::\n\n\n## \n\n::: columns\n::: {.column width=\"50%\"}\n-   Luego de categorizar el vector de interés, se puede cortar con la función `cut()`\n-   También se puede generar un vector con las categorías y juntarlo a los datos originales usando la función `findCols()`\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nbreaks = classInt::classIntervals(iris$Sepal.Length,style=\"quantile\",n=4)$brks\n\ncc = cut(iris$Sepal.Length, breaks = breaks)\ntabyl(cc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        cc  n     percent valid_percent\n (4.3,5.1] 40 0.266666667     0.2684564\n (5.1,5.8] 39 0.260000000     0.2617450\n (5.8,6.4] 35 0.233333333     0.2348993\n (6.4,7.9] 35 0.233333333     0.2348993\n      <NA>  1 0.006666667            NA\n```\n:::\n:::\n\n:::\n:::\n\n## la función `findCols()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generar un vector que se pueda juntar a la tabla de datos originales\n\nfc = findCols(classInt::classIntervals(iris$Sepal.Length,style=\"quantile\",n=4))\nhead(fc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 1 1 1 1 2\n```\n:::\n:::\n\n\n## usando el paquete `biscale`\n\n::: columns\n::: {.column width=\"50%\"}\n-   Se utliza la función `bi_class()` para generar las catetorias\n-   Permite hacer la categorización de las dos variables elejidas de una vez, a diferencia de `classIntervals()`\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(biscale)\n\ndata <- bi_class(iris, x = Sepal.Length, y = Petal.Length, style = \"quantile\", dim = 3)\nhead(data$bi_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1-1\" \"1-1\" \"1-1\" \"1-1\" \"1-1\" \"1-1\"\n```\n:::\n:::\n\n:::\n:::\n\n# 2. Preparación de leyenda bivariada\n\n## Preparación de una leyenda\n\n![](imgs/biva.png)\n\n## \n\n![](imgs/mix.gif)\n\n## \n\n![](imgs/biva2.png)\n\n## La función `bi_legend()`\n\n-   Para ver las paletas disponibles [aquí](https://chris-prener.github.io/biscale/articles/bivariate_palettes.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbi_legend(pal = \"GrPink\",\n                    dim = 3,\n                    xlab = \"Sepal.Length\",\n                    ylab = \"Petal.Lenght\",\n                    size = 12)\n```\n\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## El mapa bivariado\n\n1)  Vamos a ver el ejemplo del [vignette](https://chris-prener.github.io/biscale/articles/biscale.html)\n\n-   Son datos sobre el porcentaje de \"brancos\" y la ganancia en los EUA.\n-   Vamos usar las columnas `pctWhite` y `medInc` para hacer el mapa.\n-   Vamos usar 3 dimensiones y categorizar los datos usando `quantiles`\n\n## \n\n![](https://chris-prener.github.io/biscale/reference/figures/biscale.002.jpeg){fig-align=\"center\"}\n\n## Manos a la obra!\n\n::: columns\n::: {.column width=\"50%\"}\n-   Determinamos el geom como `geom_sf` y  `fill=bi_class`\n-   `bi_class` debe ser la categorización que hemos visto anteriormente con `bi_class()`\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap}\nlibrary(ggplot2)\nlibrary(sf)\n\ndata <- bi_class(stl_race_income, x = pctWhite, y = medInc, style = \"quantile\", dim = 3)\n\nmap <- ggplot() +\n  geom_sf(data = data, mapping = aes(fill = bi_class), color = \"white\", size = 0.1, show.legend = FALSE) +\n  bi_scale_fill(pal = \"GrPink\", dim = 3)\n```\n:::\n\n:::\n:::\n\n\n-  `bi_scale_fill`, tiene el argumento `pal` para la paleta de colores y `dim` para el numero de categorías utilizadas\n\n## \n\n-   Después de preparar el mapa, hay que preparar la leyenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlegend <- bi_legend(pal = \"GrPink\",\n                    dim = 3,\n                    xlab = \"Higher % White \",\n                    ylab = \"Higher Income \",\n                    size = 8)\n```\n:::\n\n\n-   Finalmente, ponerlos lado a lado usando `patchwork`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\nmap + legend\n```\n:::\n\n\n## \n\nSe juede jugar con el layout final usando la función `inset`\n\np1 + inset_element(p2, 0.6, 0.6, 1, 1) \\# left, top, right, bottom\n\n![](https://patchwork.data-imaginist.com/reference/inset_element-1.png)\n\n# Como hacer mapas bivariados sin usar el paquete `biscale`\n\n## \n\n-   El tutorial de [Len Kiefer](http://lenkiefer.com/2017/04/24/bivariate-map/)\n-   Usar el paquete `classInt` para categorizar los datos\n-   Usar el esquema de colores de la leyenda para preparar el mapa\n\n![](http://lenkiefer.com/post/2017-04-24-bivariate-map_files/figure-html/04-24-2017-setup-2-1.png)\n\n## \n\n-   Qué chulada! \n![](imgs/map.png)\n\n## \n\n-   La leyenda se hace con la función `expand_grid()` de  `tidyr`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\n\nd=expand.grid(x=1:3,y=1:3)\n```\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(d, aes(x,y))+\n  geom_tile(aes(alpha=x+y,fill=atan(y/x)))+\n  scale_fill_viridis_c()+\n  theme(legend.position=\"none\",\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank())+\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## \n\n-   Lo importante aqui es usar el geom `geom_tile`\n-   Permite usar varios [colores](https://ggplot2.tidyverse.org/reference/geom_tile.html)\n-   Vamos jugar con los valores de `alpha` (transparencia) y `fill`\n\n## \n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d, aes(x,y))+\n  geom_tile(aes(fill=atan(y/x)))+\n  scale_fill_viridis_c()+\n  theme(legend.position=\"none\",\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank())+\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d, aes(x,y))+\n  geom_tile(aes(fill=atan(y/x),alpha=x+y))+\n  scale_fill_viridis_c()+\n  theme(legend.position=\"none\",\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank())+\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Categorizar los datos\n\n-   vamos usar las funciones `classInt()` y `findCols()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n x=classInt::classIntervals(stl_race_income$pctWhite,\n                            4,style = \"quantile\")\n y=classInt::classIntervals(stl_race_income$medInc,\n                            4,style = \"quantile\")\n```\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstl_race_income$x = classInt::findCols(x)\nstl_race_income$y = classInt::findCols(y)\nhead(stl_race_income)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        GEOID  pctWhite medInc\n1 29510102300 82.925682  51650\n2 29510102400 90.116046  45375\n3 29510104500 74.723618  54286\n4 29510106100  1.752464  18895\n5 29510105500  2.376729  36130\n6 29510105200 36.833277  60938\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          geometry\nn2 -90.28452, -90.28448, -90.28445, -90.28422, -90.28401, -90.28349, -90.28346, -90.28343, -90.28310, -90.28297, -90.28285, -90.28278, -90.28258, -90.28252, -90.28245, -90.28238, -90.28223, -90.28221, -90.28215, -90.28200, -90.28175, -90.28151, -90.28109, -90.28104, -90.28096, -90.28072, -90.28056, -90.28024, -90.28017, -90.27985, -90.27983, -90.27973, -90.27957, -90.27943, -90.27935, -90.27933, -90.27922, -90.27916, -90.27898, -90.27890, -90.27882, -90.27862, -90.27817, -90.27804, -90.27785, -90.27779, -90.27763, -90.27757, -90.27741, -90.27719, -90.27716, -90.27711, -90.27704, -90.27683, -90.27648, -90.27635, -90.27614, -90.27592, -90.27581, -90.27574, -90.27552, -90.27544, -90.27525, -90.27495, -90.27466, -90.27446, -90.27426, -90.27393, -90.27365, -90.27345, -90.27325, -90.27323, -90.27296, -90.27257, -90.27235, -90.27224, -90.27193, -90.27183, -90.27126, -90.27095, -90.27074, -90.27064, -90.27054, -90.27041, -90.27030, -90.26999, -90.26981, -90.26978, -90.26969, -90.26966, -90.26939, -90.26918, -90.26858, -90.26832, -90.26845, -90.26847, -90.26855, -90.26858, -90.26863, -90.26879, -90.26884, -90.26890, -90.26897, -90.26905, -90.26910, -90.26969, -90.27125, -90.27144, -90.27147, -90.27185, -90.27202, -90.27211, -90.27237, -90.27246, -90.27266, -90.27280, -90.27324, -90.27344, -90.27360, -90.27405, -90.27408, -90.27424, -90.27428, -90.27440, -90.27445, -90.27464, -90.27498, -90.27523, -90.27542, -90.27550, -90.27573, -90.27581, -90.27589, -90.27597, -90.27612, -90.27620, -90.27638, -90.27693, -90.27712, -90.27729, -90.27781, -90.27798, -90.27812, -90.27816, -90.27850, -90.27871, -90.27889, -90.27927, -90.27965, -90.27970, -90.28046, -90.28052, -90.28068, -90.28105, -90.28193, -90.28211, -90.28247, -90.28249, -90.28269, -90.28278, -90.28344, -90.28377, -90.28407, -90.28415, -90.28438, -90.28440, -90.28440, -90.28451, -90.28453, -90.28452, 38.57405, 38.57416, 38.57424, 38.57465, 38.57505, 38.57601, 38.57607, 38.57612, 38.57672, 38.57697, 38.57719, 38.57732, 38.57771, 38.57785, 38.57797, 38.57809, 38.57832, 38.57836, 38.57843, 38.57862, 38.57884, 38.57902, 38.57924, 38.57926, 38.57929, 38.57940, 38.57947, 38.57961, 38.57965, 38.57983, 38.57985, 38.57993, 38.58005, 38.58017, 38.58024, 38.58026, 38.58038, 38.58045, 38.58067, 38.58079, 38.58094, 38.58092, 38.58088, 38.58086, 38.58084, 38.58084, 38.58082, 38.58081, 38.58079, 38.58076, 38.58075, 38.58074, 38.58071, 38.58056, 38.58027, 38.58017, 38.58001, 38.57984, 38.57974, 38.57974, 38.57973, 38.57973, 38.57972, 38.57972, 38.57972, 38.57971, 38.57971, 38.57971, 38.57971, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57970, 38.57969, 38.57966, 38.57961, 38.57955, 38.57949, 38.57931, 38.57921, 38.57923, 38.57930, 38.57933, 38.57919, 38.57908, 38.57878, 38.57865, 38.57825, 38.57818, 38.57795, 38.57787, 38.57772, 38.57726, 38.57711, 38.57695, 38.57671, 38.57647, 38.57631, 38.57662, 38.57744, 38.57755, 38.57756, 38.57776, 38.57787, 38.57784, 38.57777, 38.57775, 38.57769, 38.57765, 38.57756, 38.57752, 38.57749, 38.57739, 38.57738, 38.57733, 38.57732, 38.57728, 38.57726, 38.57719, 38.57706, 38.57693, 38.57684, 38.57680, 38.57668, 38.57664, 38.57660, 38.57656, 38.57647, 38.57642, 38.57631, 38.57598, 38.57587, 38.57577, 38.57545, 38.57535, 38.57526, 38.57524, 38.57504, 38.57491, 38.57479, 38.57456, 38.57434, 38.57431, 38.57387, 38.57383, 38.57374, 38.57350, 38.57294, 38.57280, 38.57253, 38.57251, 38.57233, 38.57224, 38.57162, 38.57132, 38.57224, 38.57250, 38.57327, 38.57332, 38.57333, 38.57372, 38.57388, 38.57405\nnnnn  x y\n1 4 4\n2 4 3\n3 4 4\n4 1 1\n5 1 3\n6 2 4\n```\n:::\n:::\n\n\n## Crar un objeto para el `alpha` y otro para el `fill`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstl_race_income$alpha = as.character(stl_race_income$x + stl_race_income$y)\nstl_race_income$color = as.character(atan(stl_race_income$y/stl_race_income$x))\n```\n:::\n\n\n## Graficar el mapa\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap = ggplot()+\n  #geom_sf(data=wrld)+\n  geom_sf(data = stl_race_income,aes(fill=color,alpha=alpha),shape=15, size=11,show.legend = FALSE)+\n  scale_fill_viridis_d()+\n  theme_bw()\nmap\n```\n\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n## Graficar la leyenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleg = ggplot(d, aes(x,y))+\n  geom_tile(aes(fill=atan(y/x),alpha=x+y))+\n  scale_fill_viridis_c()+\n  theme(legend.position=\"none\",\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank())+\n  coord_equal()\nleg\n```\n\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## Juntar los dos\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## Se parecen?\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](5.1-mapas_bivariados_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n![](https://chris-prener.github.io/biscale/reference/figures/biscale.002.jpeg)\n:::\n:::\n\n\n## Vamos hacer el mapa bivariado de la diversidad filogenetica de angiospermas en la Peninsula de Yucatán\n\n1.  Usando el paquete `biscale`\n2.  Manualmente\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Los paquetes que vamos a utilizar\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(tidyterra)\nlibrary(classInt)\nlibrary(biscale)\n```\n:::\n\n\n## Cargar el mapa base\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrld <- ne_countries(scale = \"small\",returnclass = \"sf\")\n```\n:::\n\n\n## Cargar los datos y ajustar el CRS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresu = read.csv(file=\"dados_bivariate_maps.csv\")\ngeo = st_as_sf(resu,coords = c(1,2))\nst_crs(geo)= st_crs(wrld)\n```\n:::\n\n\n## 1. Preparar el mapa usando el paquete `biscale`\n\n-   Calcular las categorias\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat <- bi_class(geo, x = TBD, y = PBD, style = \"quantile\", dim = 3)\n```\n:::\n\n\n## Preparar la leyenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleg =bi_legend(pal = \"DkBlue\",\n          dim = 3,\n          xlab = \"Taxonomic beta\",\n          ylab = \"Phylogenetic beta\",\n          size = 12)\n```\n:::\n\n\n## Preparar el mapa\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap =ggplot(data=wrld)+\n  geom_sf()+\n  geom_sf(data = cat, aes(color =  bi_class), size = 10, shape=15,show.legend = FALSE) +\n  bi_scale_color(pal = \"DkBlue\", dim = 3)+\n  theme_bw()+\n  theme(panel.grid.major = element_blank())+\n  coord_sf(xlim = c(-95, -86), ylim = c(16, 25), expand = FALSE)\nmap\n```\n:::\n\n\n## 2. Manualmente\n\n-   Crear un *grid*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd<-expand.grid(x=1:3,y=1:3)\nd\n```\n:::\n\n\n## Crear la leyenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleg2 =ggplot(d,aes(x,y))+\n  \n  #crear el *tile* jugando con los parámetros de colores *fill* y *alpha*\n  geom_tile( aes(fill=atan(y/x),alpha=x+y))+\n  scale_fill_viridis_c()+\n  \n  #Definir los temas\n  theme(legend.position=\"none\",\n        panel.background=element_blank(),\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title.x = element_text(size=15,hjust=0.6),\n        axis.title.y = element_text(size=15),\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank(),\n        plot.background = element_rect(fill = \"white\",color=\"white\"))+\n \n  # Definir los titulos de los ejes\n  labs(x=\"PBD\",\n       y=\"TBD\")+\n  \n  # Decir que los tiles deben se cuadrados\n  coord_equal()+\n  \n  # Poner flechitas\n  geom_segment(aes(x=1, xend = 3 , y=0, yend = 0), size=1.5,\n               arrow = arrow(length = unit(0.6,\"cm\"))) +\n  geom_segment(aes(x=0, xend = 0 , y=1, yend = 3), size=1.5,\n               arrow = arrow(length = unit(0.6,\"cm\"))) \nleg2\n```\n:::\n\n\n## Categorizar los datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncatTBD = classInt::classIntervals(geo$TBD,3,style = \"quantile\")\ncatPBD = classInt::classIntervals(geo$PBD,3,style = \"quantile\")\n\n# Juntar las columnas\ngeo$catTBD = classInt::findCols(catTBD)\ngeo$catPBD= classInt::findCols(catPBD)\n```\n:::\n\n\n## Hacer las columnas para el *alpha* (transparencia) y *color*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeo$alpha = as.character(geo$catTBD + geo$catPBD)\ngeo$color  = as.character(atan(geo$catTBD/geo$catPBD))\n```\n:::\n\n\n## Hacer el mapa\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap2 = ggplot()+\n  geom_sf(data=wrld)+\n  geom_sf(data = geo,aes(color=color,alpha=alpha),shape=15, size=10,show.legend = FALSE)+\n  scale_color_viridis_d()+\n  theme_bw()+\n  theme(panel.grid.major = element_blank())+\n  coord_sf(xlim = c(-95, -86), ylim = c(16, 25), expand = FALSE)\nmap2\n```\n:::\n\n\n## Agregar la leyenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap + leg\nmap2 + leg2\n```\n:::\n",
    "supporting": [
      "5.1-mapas_bivariados_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}