---
title: "Filogenias en R"
author: Axel Arango & Fabricio Villalobos
format: revealjs
---

## Filogenias en R

```{r}
#| echo: false
library(ape)
library(dplyr)

```

Primero, ¿Qué es un árbol Filogenético?

##

Un árbol filogenético es un diagrama que muestra la relación de parentezco entre especies (o taxones)

##

Uno de los formatos más utilizados para representar filogenias son el *Newick*(.tree)

El formato Newick es una notación para representar parentescos utilizando parentesis y comas.

##

Si queremos decir que A y B se parecen más entre ellos que con X, lo anotaríamos así:

```{r prueba newick}
#| eval: true
#| echo: true

"((A,B),X);"
```


##

Para que *R* pueda identificar está notación, se puede usar `ape`:

```{r newick}
#| echo: true
#| eval: true

library(ape)
read.tree(text="((A,B),X);") %>% 
  plot()
```

##

El formato Newick es anidado, por lo que podemos explorar la relación entre diferentes grupos. Por ejemplo:

Sabemos que los lobos, los coyotes y los zorros pertenecen a Canidae, pero que los lobos y los coyotes son del mismo género

```{r canii}
#| eval: true
#| echo: true
Canidae <-"(Vulpes_vulpes,(Canis_lupus,Canis_latrans));"
read.tree(text=Canidae) %>% 
  plot()

```


##

Y si agregamos murciélagos, todos ellos pertenecen a los mamíferos:

```{r}
#| echo: true
#| eval: true
#| label: murcis


Mammalia <-"(Desmodus_rotundus,(Vulpes_vulpes,(Canis_lupus,Canis_latrans)));"
read.tree(text=Mammalia) %>% 
  plot()
```


##

Si quisieramos agregar cuervos y zanates. ¿Estos dónde irían?

```{r}
#| label: zan
#| echo: true
#| eval: true

tetrapoda<-"((Quiscalus_mexicanus,Corvus_corax),(Desmodus_rotundus,(Vulpes_vulpes,(Canis_lupus,Canis_latrans))));"

read.tree(text=tetrapoda) %>% 
  plot()
```

##

Y si agregamos una planta, los mamíferos y las aves se anidarían.

```{r}
#| eval: true
#| echo: true
#| label: planta

Eukarya<-"(Sideroxylon_celastrinum,((Quiscalus_mexicanus,Corvus_corax),(Desmodus_rotundus,(Vulpes_vulpes,(Canis_lupus,Canis_latrans)))));"

Nktree<-read.tree(text=Eukarya)
plot(Nktree)
```

##

-   En este ejercicio haremos uso del paquete *ggtree* para graficar, personalizar, anotar y en general mejorar árboles filogenéticos

## Paquetes necesarios:

```{r}
#| eval: true
#| echo: true
#| message: false
#| warning: false

library(ape)
library(ggtree)
library(deeptime)
library(tidytree)
library(ggimage)
library(geiger)
library(caper)
library(TDbook)
library(here)
```

## 

En este caso usaremos un árbol filogenético en particular (la filogenia de *Icteridae*). Sin embargo, estos ejemplos se pueden hacer en su mayoría con cualquier otra filogenía que tengan disponible.

```{r}
#| eval: true
#| echo: true

ictree <-read.tree(here("data","Icteridae_tree.txt"))
ictree
```

## 

Veamos esta filogenia graficandola usando *ape*, la manera base para R.

```{r}
#| eval: true
#| echo: true

plot(ictree, show.tip.label=F)
```

## 

Ahora graficaremos el mismo árbol utilizando ggtree, el cual sigue una formula idéntica a la de ggplot. Nuestro árbol base se llamará *p1*:

```{r}
#| eval: true
#| echo: true

p1<-ggtree(ictree,color="black",size=0.5)
plot(p1)
```

## 

Con *p1*, al igual que con cualquier otro gráfico de ggplot, podemos agregar parametros de graficación para personalizar o agregar anotaciones a nuestra filogenia. Primero empezaremos con los parametros de personalización. Por ejemplo, podemos cambiar la disposición de la filogenia utilizando el parametro *layout\_*:

## 

```{r}
#| eval: true
#| echo: true

p1+layout_dendrogram()+
p1+layout_fan()+
p1+layout_circular()
```

## 

También podemos cambiar el color del fondo del gráfico

```{r}
#| eval: true
#| echo: true
p1+
  theme_tree(bgcolor="lightblue")
```

## 

Agregar las etiquetas para las puntas de una manera personalizable:

```{r}
#| eval: true
#| echo: true
p1+
  geom_tiplab(size=1,color="darkblue",angle=10)
```

## 

formas a las puntas:

```{r}
#| eval: true
#| echo: true
p1+
  geom_tippoint(size=1,color="brown",shape=10)
```

## 

Etiquetas a los nodos:

```{r}
#| eval: true
#| echo: true
p1+ 
  geom_nodelab(size=1,color="purple")
```

## 

o formas a los nodos:

```{r}
#| eval: true
#| echo: true
p1+ 
  geom_nodepoint(size=2,color="red",shape=16)
```

## 

e incluso agregar una escala temporal a la filogenia, con la ayuda del paquete `deeptime`

```{r}
#| eval: true
#| echo: true
py<-revts(p1)
py+coord_geo(xlim=c(-10,-1),abbrv = F,neg=T,skip=NULL,dat="stage",size=1.5)+
  theme_tree2()
```

## 

Cómo en ggplot, todos estos parámetros son aditivos, por lo cual puedes construir la filogenía de manera gradual

```{r}
#| eval: true
#| echo: true
p1+ 
  layout_dendrogram()+
  theme_tree(bgcolor="#e9f0ea")+
  geom_tiplab(size=0.5,color="darkblue",angle=45)+
  geom_tippoint(size=1,color="brown",shape=10)+
  geom_nodelab(size=1,color="purple")+
  geom_nodepoint(size=2,color="red",alpha=0.3,shape=16)
```

## 

Ahora para la anotación de los árboles, se pueden hacer varias cosas, a mi, por ejemplo, me gusta mucho el género *Quiscalus*, y quisiera saber donde se encuentra en la filogenia.

##

Para esto primero debemos encontrar el nodo del ancestro en común más reciente para este grupo. Usando un *tibble* y la estructura de *dplyr* es muy facil, primero transformamos nuestro árbol en un tibble y despues utilizando un filtro buscamos las especies de *Quiscalus*:

```{r}
#| eval: true
#| echo: true
ictree %>%
as_tibble %>%
  filter(grepl("Quiscalus",label))
```

## 

Después usando la función *MRCA* podemos encontrar el ancestro en común de estas especies, en las cuales podemos usar los nombres de las especie con la longitud de rama más alargada y con la longitud de rama más corta, o sus nodos:

```{r}
#| eval: true
#| echo: true
ictree %>%
as_tibble %>%
MRCA(41,43)
```

. . .

```{r}
#| eval: true
#| echo: true
ictree %>%
as_tibble %>%
MRCA("Quiscalus_quiscula","Quiscalus_mexicanus")
```

## 

Ahora sabiendo que el ancestro en común de *Quiscalus* se encuentra en el nodo 146, puedo utilizar esta información para anotar la filogenia utilizando el parametro *geom_cladelab*:

```{r}
#| eval: true
#| echo: true
p1+
  geom_cladelab(node=146,label = "Quiscalus",offset=0,
            barcolor="red",textcolor="brown",
            angle=90, offset.text=0.1)
```

## 

y que tal el genero que tiene el nombre de la familia: *Icterus*:

```{r}
#| eval: true
#| echo: true
ictree %>%
  as_tibble %>%
  filter(grepl("Icterus",label))
```

. . .

```{r}
#| eval: true
#| echo: true
ictree %>%
as_tibble %>%
MRCA(25,14)
```

## 

```{r}
#| eval: true
#| echo: true
p1+xlim(0,11)+
  geom_cladelab(node=104,label="Icterus",geom="label",
fill="yellow",textcolor="red", barcolor="gray",angle=90)
```

## 

También podemos dibujar una linea entre dos taxa, que pudieran o no estár relacionados, utilizando el parametro *geom_strip*:

```{r}
#| eval: true
#| echo: true
p1+xlim(0,15)+
  geom_strip("Quiscalus_quiscula","Icterus_icterus",
  label=" un clado polifilético", barsize = 2, offset.text = 0.2)
```

## 

Un parametro de anotación muy bueno, también es el *geom_highlight*, el cual nos permite destacar clados en particular, utilizando los nodos de ancestro en común:

```{r}
#| eval: true
#| echo: true
p1+
  geom_highlight(node=146,alpha=0.5,fill="purple",type = "rect")
```

## 

¿Qué clado es este?

```{r}
#| eval: true
#| echo: true
p1+
  geom_highlight(node=146,alpha=0.5,fill="purple",type = "rect")+
  geom_cladelab(node=146,label = "Quiscalus",offset=0,barcolor="#9418f2",textcolor="#4c0980", offset.text=0)+
  xlim(0,11.5)
```

## 

Una función bastante interesante de *ggtree* es que se pueden personalizar las filogenías utilizando recursos en línea como *phylopic* o enriquecerlas con imagenes propias. Para poder hacer uso de esta función, primero debemos cargar un paquete extra:

```{r}
#| eval: true
#| echo: true
library("rsvg")
```

. . .

Hacer uso de *phylopic* para personalizar las anotaciones de las filogenias requiere que primero hagamos una tabla con los nodos, el nombre de la especie o clado a los cuales vamos a anotar y el phylopic_id.

## 

En este ejemplo utilizaré los clados *Quiscalus* y *Agelaius*, que sé que tienen imagenes indexadas en *phylopic*. Encontrar los phylopic_id es fácil usando la función *phylopic_uid*:

```{r}
#| eval: true
#| echo: true
ids<-phylopic_uid(c("Quiscalus","Agelaius"))
ids
```

Con estos ids, ya podemos crear nuestra tabla con los datos necesarios y después gráficar nuestra filogenia:

```{r}
#| eval: true
#| echo: true
dt<-data.frame(node=c(146,136),image=ids$uid,genus=c("Quiscalus","Agelaius"))
dt
```

## 

```{r}
#| eval: true
#| echo: true
p1+ geom_cladelab(data = dt, 
                      mapping = aes(node = node, label = genus, 
                                    image = image, color = genus), 
                      geom = "phylopic", offset = 0, offset.text=0.5)
```

## 

Además, usando la argumentación como en ggplot, podemos personalizar los colores de nuestros *phylopics*:

```{r}
#| eval: true
#| echo: true
p1+ geom_cladelab(data = dt, 
                      mapping = aes(node = node, label = genus, 
                                    image = image, color = genus), 
                      geom = "phylopic", offset = 0, offset.text=0.5)+ scale_color_manual(values=c("#f75419","purple"))
```

## 

Utilizando estas parametrizaciones, podemos crear una filogenia bastante atractiva:

```{r}
#| eval: true
#| echo: true
pr<-p1+ geom_cladelab(data = dt, 
                      mapping = aes(node = node, label = genus, 
                                    image = image, color = genus), 
                      geom = "phylopic", offset = 0, offset.text=0.5)+
  scale_color_manual(values=c("#f75419","purple"))+
  geom_highlight(node=146,alpha=0.5,fill="purple",type = "rect")+
  geom_highlight(node=136,alpha=0.5,fill="#f75419",type = "rect")
pr
```

## 

y este es un ejemplo de el tipo de filogenias que pueden crearse haciendo uso de todas estas parametrizaciones:

```{r}
#| eval: true
#| echo: true
tree<-read.tree(here("data","nodedtree.txt"))
nodes<-c(825,725,921,1042,1080,1375,707)
labels<-c("Parulidae","Icteridae","Passerellidae","Cardinalidae","Thraupidae","Emberizidae","Calcariidae")
#

iu2<-phylopic_uid(c("Setophaga","Quiscalus","Passerellidae","Cardinalis","Thraupidae","Emberizidae","Emberiza"),seed=1)

dt<-data.frame(node=nodes,name=labels,image=iu2$uid)

p2<-ggtree(tree,layout="circular",color="white")+theme_tree("black")

p3<-p2+
  geom_highlight(node=825,fill="yellow")+
  geom_cladelab(node=825,label="Parulidae",barcolor="yellow",textcolor="white",offset.text=4, fontsize=4)+
  
  geom_highlight(node=725,fill="orange")+
  geom_cladelab(node=725,label="Icteridae",barcolor="orange",textcolor="white",offset.text=5, fontsize=4,angle=45)+
    
    geom_highlight(node=921,fill="brown")+
  geom_cladelab(node=921,label="Passerellidae",barcolor="brown",textcolor="white",offset.text=1, fontsize=4)+
  
  geom_highlight(node=1042,fill="red")+
geom_cladelab(node=1042,label="Cardinalidae",barcolor="red",textcolor="white",offset.text=7, fontsize=4,angle=-45,align=T)+
  
  geom_highlight(node=1079,fill="lightgreen")+
geom_cladelab(node=1079,label="Thraupidae",barcolor="lightgreen",textcolor="white",offset.text=2, fontsize=4)+
  
  geom_highlight(node=1375,fill="magenta")+
  geom_cladelab(node=1375,label="Emberizidae",barcolor="magenta",textcolor="white",offset.text=1, fontsize=4,align=T)+
  
  geom_highlight(node=707,fill="blue")+
  geom_cladelab(node=707,label="Calcariidae",barcolor="blue",textcolor="white",offset.text=1, fontsize=4,align=T)



```

## 

```{r}
#| eval: true
#| echo: true
p3+
geom_cladelab(data = dt, 
              mapping = aes(node = node, label = name, 
                            image = image, color = name), 
              geom = "phylopic", offset.text=c(10,7,6,5,9,4,10))+
  scale_colour_manual(values=c("blue","red","magenta","orange","yellow","brown","lightgreen"))
```

## 

Para poder anotar las filogenias con imagenes, es recomendable usar árboles filogéticos pequeños, en los cuales quizá con un grupo de representantes bastaría. En este ejemplo usaremos una filogenia parafiletica con los generos *Quiscalus* (Los zanates), *Icterus* (Las calandrias), *Molothrus* (Los tordos), *Agelaius* (Los sargentos) y *Psarocolius* (Las oropendolas):

Entonces, primero recuperamos un representante de cada grupo, *ape* es muy bueno para esto usando la función *keep.tip*:

```{r}
#| eval: true
#| echo: true
grouptree<-ictree %>%
keep.tip(c("Quiscalus_mexicanus", "Icterus_galbula","Molothrus_aeneus","Agelaius_phoeniceus","Psarocolius_montezuma"))

grouptree$tip.label<-c("Calandrias","Sargentos","Zanates","Tordos","Oropendolas")

p4<-ggtree(grouptree,size=1)

```

## 

```{r}
#| eval: true
#| echo: true
p4+xlim(0,15)+
  geom_tiplab(color="navyblue",offset = 0.5)
```

## 

Una vez teniendo este árbol parafilético, podemos colocar las imagenes gusto en sus grupos correspondientes, es importante considerar, que las imagenes deben tener el nombre exacto del grupo o especie y el mismo formato:

```{r}
#| eval: false
#| echo: true
p4+ 
  xlim(NA, 15) + ylim(NA, 5.5)+
  geom_tiplab(aes(image=paste0("imgs/imagenes/", label, '.jpg')),geom="image", offset=3, align=1, size=0.18)+
  geom_tiplab(geom="label",color="black",fill="white")
```

##

```{r}
#| eval: true
#| echo: false
p4+ 
  xlim(NA, 15) + ylim(NA, 5.5)+
  geom_tiplab(aes(image=paste0("imgs/imagenes/", label, '.jpg')),geom="image", offset=3, align=1, size=0.18)+
  geom_tiplab(geom="label",color="black",fill="white")
```

## 

También es posible agregar especies a la filogenia dentro de sus respectivos generos, pero hay que tener cuidado con esto, pues posiblemente nos genere politomías o colocarlas de manera discordante, y esto puede ser problématico para estudios de diversificación o evolución de atributos.

## 

Volveremos a usar nuestra filogenia de grupos y le agregaremos dos especies de *Icterus* y una especie de *Quiscalus*

```{r}
#| eval: true
#| echo: true
grouptree<-ictree %>%
keep.tip(c("Quiscalus_mexicanus", "Icterus_galbula","Molothrus_aeneus","Agelaius_phoeniceus","Psarocolius_montezuma"))
ggtree(grouptree)+
  xlim(0,15)+
  geom_tiplab(color="blue")
```

## 

Para agregar las especies, utilizamos la función *add.species.to.genus* de *phytools*:

```{r}
#| eval: true
#| echo: true
grouptree2<-grouptree
grouptree2<-add.species.to.genus(grouptree2,"Quiscalus_quiscula")
grouptree2<-add.species.to.genus(grouptree2,"Icterus_bullocki")
grouptree2<-add.species.to.genus(grouptree2,"Icterus_gullaris")
ggtree(grouptree2)+
  xlim(0,20)+
  geom_tiplab(color="blue")
```

## 

Finalmente, se puede usar ggtree, para graficar atributos de las especies en la filogenia.

Para hacer esto, primero debemos cargar los atributos de los Icteridos, en este caso usaremos el Hand Wing Index (HWI) y el hábito migratorio:

```{r}
#| eval: true
#| echo: true

hwi<-read.csv(here("data","hwi_icteridae.csv"),header=T)
head(hwi)
```

## 

```{r}
#| eval: true
#| echo: true
migrants<-read.csv(here("data","icterimigrants.csv"),header=T)
head(migrants)
```

## 

Una vez cargados los datos, la manera más fácil de utilizarlos es uniendolos a la filogenia usando la funcion *full_join*, es importante que las especies estén etiquetadas como label, para que la función las reconozca:

```{r}
#| eval: true
#| echo: true

names(hwi)<-c("label","hwi")
names(migrants)<-c("label","migratory")

hwimigrants<-hwi%>%
left_join(migrants,by="label")
datatree<-full_join(ictree,hwimigrants,by="label")
datatree
```

## 

¡Listo! Ahora tenemos una filogenia con atributos y podemos gráficarlos juntos

Primero gráficaremos los valores continuos del HWI sobre las puntas del árbol en una escala de colores:

```{r}
#| eval: true
#| echo: true

p5<-ggtree(datatree)
p5+
  geom_tippoint(aes(color=hwi))
```

## 

podemos también personalizar esta escala:

```{r}
#| eval: true
#| echo: true

p5+
  geom_tippoint(aes(color=hwi),shape=15)+
  scale_colour_gradient(low='blue', high='red',breaks= c(15,20,25,30,35))
```

## 

¿Y cómo se verían los datos binarios?

```{r}
#| eval: true
#| echo: true

p5+
  geom_tippoint(aes(color=migratory),shape=15)+
    scale_colour_manual(values = c("green","orange"))
```

## 

y ¿Pueden combinarse?

Esto puede hacerse con un lenguaje de *dplyr*

```{r}
#| eval: true
#| echo: true

px<- py%<+% migrants + geom_tippoint(aes(color=migratory),shape=15)+
  scale_color_manual(values = c("#961d29","#1420a3"))+
  scale_fill_manual(values = c("#961d29","#1420a3"))
  
  
px+ geom_facet(panel="HWI",data = hwi,geom=geom_col,mapping=aes(x=hwi,color=migratory,fill=migratory),orientation='y')+
    theme_tree2()
```

##

Pero, ¿Qué pasa si no me sé la taxonomía o no tengo la filogenía del grupo que estoy estudiando?
```{r}
#| eval: true
#| include: false

picuid<-phylopic_uid(c("Argania","Quiscalus","Corvus","Desmodus","Vulpes","Canis lupus","Canis latrans"),seed=123)
pics<-data.frame(label=Nktree$tip.label,uid=picuid$uid)
phylopicNK<-ggtree(Nktree) %<+% pics+
  geom_tiplab(aes(image=uid,color=label),geom="phylopic")+
  theme(legend.position="none")+
  scale_color_manual(values=c("#81613c","#919494","black","#473434","#2e275a","#e0cc77","#9ea26b"))
```

##

¿Se acuerdan de esta filogenia?

```{r}
#| eval: true
#| echo: true
phylopicNK
```

##

Haciendo uso de recursos en línea como *Open tree of Life*(OTL), podemoos obtener una filogenia utilizando las especies que necesitemos.

##

OTL tiene un útil paquete en R (`rotl`), que usaremos para obtener la filogenia con la planta, aves y mamiferos.

```{r}
#| eval: true
#| echo: true 
#| warning: false

library("rotl")
otl_tree<-rotl::tnrs_match_names(c("Quiscalus mexicanus","Canis lupus","Corvus corax","Canis latrans","Vulpes vulpes","Desmodus rotundus","Sideroxylon celastrinum")) %>% 
  pull(ott_id) %>% 
  tol_induced_subtree(label_format="name")
```

##

```{r}
#| eval: true
#| echo: true
p_ott<-ggtree(otl_tree)+
  xlim(0,9)+
  geom_tiplab(color="blue")
p_ott
```

##
Para la función de `rtol`, no es necesario introducir las especies en orden, ya que ésta recuperará la taxonomia válida y nos arrojará una filogenia podada.

En este caso, OTL nos regresó exactamente la misma filogenia que creamos al principio:

```{r}
#| eval: true
#| echo: true
p_nk<-ggtree(Nktree)+
  xlim(0,9)+
  geom_tiplab(color="red")

p_ott/p_nk
```
##
