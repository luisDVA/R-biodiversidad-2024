---
title: "Patrones geográficos de riqueza de especies"
author: Fabricio Villalobos & Axel Arango
format: revealjs
---


## Áreas de distribución y patrones geográficos de riqueza

> "To do science is to search for repeated patterns, not simply to accumulate facts" R. MacArthur


-   A partir de las distribuciones geográficas de las especies es posible describir y evaluar diferentes patrones de biodiversidad que emergen cuando estudiamos conjuntos de especies (y no a nivel indivual)

## Áreas de distribución y patrones geográficos de riqueza

-   En este ejercicio veremos cómo usar las distribuciones de las especies (polígonos, como los que generamos en el ejercicio anterior) para generar el patrón geográfico de riqueza de especies

-   Usaremos dos paquetes (`letsR` y `epm`) para mostrar diferentes maneras de llegar a lo mismo, considerando paquetes obsoletos (y que pronto se retirarán) y nuevos (que suplen los anteriores)

## 

Los datos (polígonos) son de una familia de aves (Passeriformes:Emberizoidae:Icteridae) obtenidos de [BirdLife International](https://www.birdlife.org/)

## Paquetes necesarios:

```{r}
#| eval: true
#| echo: true
#| message: false
#| warning: false

library(sp)
library(letsR)
library(rgdal)
library(ggplot2)
library(viridisLite)
library(epm)
library(sf)
library(tmap)
library(here)
```

# letsR (Vilela & Villalobos 2015 MEE)

## 

Cargar los polígonos de las especies de interés (shapefiles en su carpeta de trabajo)

```{r}
#| eval: true
#| echo: true
icteri_maps <- readOGR(here("data","icteridae_maps","icteridae_maps.shp"))
```

. . .

Conocer el dominio ("extent") de los datos, para usarlo después en la delimitación del espacio (geográfico) de trabajo

```{r}
#| eval: true
#| echo: true
icteri_maps@bbox
```


## 

Crear una matriz de presencia-ausencia a partir de los polígonos

```{r}
#| eval: true
#| echo: true
icteri.pam <- lets.presab(icteri_maps, xmn = -167,xmx = -35, ymn = -56, ymx = 70, resol=1)
```

## ¿Cómo se ve el patrón geográfico?

. . .

```{r}
#| eval: true
#| echo: true
plot(icteri.pam)
```

## 

¿Qué tiene el objeto que se graficó?

```{r}
#| eval: true
#| echo: true
icteri.pam$Richness_Raster
```

## 

Vamos a verlo en `ggplot`

. . .

Primero, convertimos el raster en un `data.frame`

```{r}
#| eval: true
#| echo: true
rdf <- as.data.frame(icteri.pam$Richness_Raster, xy=TRUE) #Convert raster to data.frame
names(rdf)[3] <- 'richness' #Name value column
head(rdf)
rdf2 <- rdf
rdf2[,3] <- ifelse(rdf[,3]==0,NA,rdf[,3])
head(rdf2)

```

## 

Ahora sí, lo graficamos

```{r}
#| eval: true
#| echo: true
ggplot(data = rdf2)+
  geom_raster(mapping=aes(x=x, y=y, fill=richness))+
  scale_fill_gradientn(colours= rev(inferno(10)), name='Richness')
```

# EcoPhyloMapper - epm (Title et al. 2022 MEE)

## 

Cargar nuevamente los polígonos, pero ahora con el paquete 'nuevo' y recomendado a partir de junio 2023! (sf)

```{r}
#| eval: true
#| echo: true
icteri_file <- here("data","icteridae_maps","icteridae_maps.shp")
icteri_maps.sf <- st_read(icteri_file, stringsAsFactors = FALSE)
```

. . .

Checar que la columna de especies (en este caso: SCINAME) sea de caracteres (para evitar problemas más adelante)

```{r}
#| eval: true
#| echo: true
class(icteri_maps.sf$SCINAME)
```

##

Crear un vector con los nombres de todas las especies en el multipoligono

```{r}
#| eval: true
#| echo: true
allspp <- unique(icteri_maps.sf$SCINAME)
```

## 

Creamos polígonos individuales por especie

```{r}
#| eval: true
#| echo: true
spList <- vector('list', length(allspp))
names(spList) <- allspp

for (i in 1:length(allspp)) {
  ind <- which(icteri_maps.sf$SCINAME == allspp[i])
  spList[[i]] <- icteri_maps.sf[ind,]
}
```

. . .

Checamos la geometría de los polígonos e intentamos corregirla si es necesario

```{r}
#| eval: true
#| echo: true
for (i in 1:length(spList)) {
   	if (!any(st_is_valid(spList[[i]]))) {
     		message('\trepairing poly ', i)
     		spList[[i]] <- st_make_valid(spList[[i]])
     	}
   }
```

## 

Ahora sí, creamos el gradiente de riqueza con el paquete epm

```{r}
#| eval: true
#| echo: true
icteriEPM <- createEPMgrid(spList, resolution = 1, retainSmallRanges = TRUE, extent = 'auto', method = 'percentOverlap', cellType = 'square', percentThreshold = 0.1)
```



## ¿Qué tiene el objeto generado?

```{r}
#| eval: true
#| echo: true
icteriEPM
```

## 

Lo graficamos

```{r}
#| eval: true
#| echo: true
plot(icteriEPM)
```

## 

Ahora generamos la matriz de presencia-ausencia a partir del objeto creado. Esta matriz nos puede servir para comparar con los resultados de `letsR` o para derivar otras métricas/patrones

```{r}
#| eval: true
#| echo: true
icteri.pamEPM <- epmToPhyloComm(icteriEPM, sites = 'all')
```
