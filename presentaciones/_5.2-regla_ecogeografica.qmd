---
title: "Regla de Rapoport y otras patrones"
author: Axel Arango & Fabricio Villalobos
format: revealjs
editor: visual
---

## Regla de Rapoport

> "Relación positiva entre latitud y tamaño de área de distribución" G. Stevens

-   En este ejercicio se probará la regla de Rapoport en un set de más de 6000 registros para especies de la familia *Icteridae* (Aves: Passeriformes) y se compararán los procedimientos utilizando dos paqueterías: `letsR` y EcoPhylo Mapper `epm`

`epm` utiliza los paquetes `sf` y `terra` para análisis espaciales, lo cuál será útil cuándo `rgdal` y `raster` se hayan descontinuado (a partir de ya! junio 2023)

## Paquetes necesarios:

```{r}
#| eval: true
#| echo: true
library(epm)
library(rgdal)
library(sf)
library(caper)
library(here)
library(geiger)
library(letsR)
library(ggplot2)
library(dplyr)
library(spdep)
library(spatialreg)
```

## 

Cargar los datos de registros de Icteridae (obtenidos de GBIF)

```{r}
#| eval: true
#| echo: true
ict<-read.csv(here("data","ict.csv"),header=T)
```

. . .

Limpiar los registros, asegurándonos que no haya ningún NA ni registros repetidos:

```{r}
#| eval: true
#| echo: true
ict<-ict %>% 
  na.omit %>% 
  unique %>% 
  rename(taxon=sp,x=longitude,y=latitude)
```

. . .

Finalmente, cambiaremos los espacios por guiones bajos en los nombres de las especies. Esto con el fin de que puedan ser reconocidas al momento de utilizar alguna filogenía

```{r}
#| eval: true
#| echo: true
ict<-ict %>% 
  mutate(taxon=gsub(" ","_",taxon))
head(ict)
```

## 

Habiendo cargado y limpiado los registros, podemos obtener los atributos de interés para evaluar la regla de Rapoport en esta familia de aves. Para esto necesitamos saber el área de distribución de las especies y su ubicación geográfica.

. . .

Usando `letsR`, primero, creamos una matriz de presencia-ausencia

```{r}
#| eval: true
#| echo: true
presab<-lets.presab.points(cbind(ict$x,ict$y),ict$taxon)
```

. . .

Después, obtenemos el área de distribución de las especies

```{r}
#| eval: true
#| echo: true
ranges<-lets.rangesize(presab)
head(ranges)
```

## 

Finalmente, necesitamos la ubicación de las especies.

Afortunadamente, `letsR` posee una práctica función que permite obtener el punto medio de la ubicación geográfica de las especies

```{r}
#| eval: true
#| echo: true
midp<-lets.midpoint(presab)
head(midp)
```

## 

Ahora que tenemos los datos, podemos poner a prueba la relación esperada por la Regla de Rapoport

```{r}
#| eval: true
#| echo: true
lm(log(ranges)~abs(midp$y)) %>% 
summary

```

## 

La relación entre el área de distribución y la latitud es significativamente postiva en *Icteridae* ahora observemosla de manera más gráfica:

```{r}
#| eval: true
#| echo: true
dfram<-data.frame(midp,ranges);names(dfram)<-c("sp","x","y","ranges")
p<-ggplot(dfram,aes(abs(y),log(ranges)))+
            geom_point(color="black")+
            xlab("Latitud absoluta")+
            ylab("Log (tamaño área)")+
            geom_smooth(method= lm , color="red", fill="#69b3a2", se=TRUE)+
            theme_classic()

plot(p)
```

## 

Ahora utilicemos el paquete `epm` para tratar de hacer lo mismo. `epm` no puede utilizar sòlo los puntos de longitud y latitud de nuestros registros, primero hay que transformar esos puntos en un "spatial feature"

```{r}
#| eval: true
#| echo: true
sp_ict<-st_as_sf(ict, coords = c("x","y"), crs= st_crs("+datum=WGS84 +proj=longlat"))
head(sp_ict)
```

## 

Ahora que nuestros registros son un objeto espacial, ya podemos utilizar `epm` para crear un grid con nuestras especies en el espacio:

```{r}
#| eval: true
#| echo: true
grix<-createEPMgrid(sp_ict,resolution = 1)
```

. . .

Con este grid, ya podemos obtener el área de distribución de las especies, dónde cell es área de distribución

```{r}
#| eval: true
#| echo: true
Cellcount<-data.frame(grix$cellCount)
names(Cellcount)<-"cell"
head(Cellcount)
```

## 

¿Qué tanto se parece la distribución calculada con `letsR` a la calculada con `epm`?

```{r}
#| eval: true
#| echo: true
par(mfrow=c(1,2))
hist(dfram$ranges, breaks=15, main ="LetsR", xlab="área de distribución",ylab="especies")
hist(Cellcount$cell, breaks =15, main= "EPM", xlab ="área de distribución",ylab="especies")
```

## 

Para la ubicación geográfica de las especies, en el caso de `epm` no se cuenta con una función especifica para obtener los puntos medios de la distribución de las especies.

Por lo tanto, tenemos que cargar una función personalizada:

```{r}
#| eval: true
#| echo: true
load(here("data","st_midpoints.R"))
```

. . . Esta función utiliza la nueva paquetería `sf` para crear un polígono para cada especie con todas las coordenadas de nuestros registros, para posteriormente calcular el centroide de dicho polígono, obteniendo así los puntos medios de la ubicación geográfica de nuestras especies.

```{r}
#| eval: true
#| echo: true
midst<-st_midpoints(ict)
head(midst)
```

## 

Ahora ya tenemos los datos necesarios para evaluar la relación esperada por la Regla de Rapoport

```{r}
#| eval: true
#| echo: true
lm(log(Cellcount$cell)~abs(midst$Y)) %>% 
  summary
```

## 

-   El resultado es una relación significativamente postiva en *Icteridae* entre el área de distribución y la latitud.

-   Esta relación es muy parecida a la obtenida utilizando el procedimiento `letsR`. Las diferencias observadas pueden deberse a 1) el cálculo de los grids, pues `letsR` utiliza celdas y nosotros calculamos hexagonos con `epm` o 2) el cálculo de los puntos medios, pues para `epm` dicho cálculo es más o menos artesanal.

-   Ahora que hemos evaluado la regla de Rapoport utilizando dos métodos y paqueterías distintas, podemos pensar en el efecto del componente evolutivo sobre dicha relación.

## 

Para esto, primero debemos cargar una filogenía para nuestras especies. En este caso utilizaremos una filogenía para *Icteridae*, cortada de la filogenía para *Emberizoidea*, usada en Arango et al., 2022, modificada y estandarizada de Barker et al., 2015.

```{r}
#| eval: true
#| echo: true
tre<-read.tree(here("data","Icteridae_tree.txt"))
tre
```

## 

Ahora crearemos un *data.frame* el cual contenga el área de distribución y los puntos medios para cada especie. Para motivos del ejercicio, haremos uso de los resultados obtenidos con `epm`. ¡Pero ustedes pueden hacerlo con los resultados obtenidos con `letsR` y podemos comparar las relaciones finales!

```{r}
#| eval: true
#| echo: true
rapp<-midst %>% 
  cbind(Cellcount) %>% 
  as.data.frame() %>% 
  rename(x=X,y=Y,area=cell)

head(rapp)
```

## 

Una vez que tenemos nuestra tabla de datos, creamos un objeto *comparative.data*, el cual juntará nuestros datos geográficos con nuestros datos filogenéticos

```{r}
#| eval: true
#| echo: true
compict<-comparative.data(tre,data =rapp,names.col = "sp",vcv = T)
```

## 

Ahora ya podemos ajustar un modelo de regresión considerando las relaciones filogenéticas de nuestras especies utilizando un PGLS (*P*hylogenetic *G*eneralized *L*east *S*quares):

```{r}
#| eval: true
#| echo: true
pgls(log(area)~abs(y),data=compict,lambda="ML") %>% 
summary()
```

## 

¡La relación se mantiene!

-   Ahora, si bien es mucho más fácil obtener estos resultados utlizando `letsR`, `epm` hace uso de las nuevas paqueterías espaciales, además de servir para mapear otros componentes de diversidad y macroevolución.

-   Por ejemplo, podemos obtener la diversidad filogenética (PD), las tasas de diversificación (DR) y los endemismos filogenéticos de cada comunidad (o celda) y responder preguntas que involucren métricas de este tipo y la geografía.

## 

Para esto, primero debemos agregarle una filogenía a nuestro grid creado con `epm`

```{r}
#| eval: true
#| echo: true
grix<-epm::addPhylo(grix,tre)
```

. . .

Ya con la filogenía incorporada a nuestro grid de `epm`, calculamos para cada celda PD:

```{r}
#| eval: true
#| echo: true
pd<-gridMetrics(grix,"pd")
```

## 

Además, podemos calcular otras métricas 'evolutivas' como la tasa de diversificación y los endemismos filogenéticos

. . .

Tasa de especiación

```{r}
#| eval: true
#| echo: true
dr<-gridMetrics(grix,"DR")
```

. . .

Endemismo filogenético

```{r}
#| eval: true
#| echo: true
phyendm<-gridMetrics(grix,"phyloWeightedEndemism")
```

## 

Veamos estas métricas mapeadas en el espacio geográfico

. . .

```{r}
#| eval: true
#| echo: true
par(mfrow=c(1,3))
plot(pd,use_tmap=F, legend=F)
addLegend(pd,location="left",label = "PD")
plot(dr,use_tmap=F, legend=F)
addLegend(dr,location="left",label = "DR")
plot(phyendm,use_tmap=F, legend=F)
addLegend(phyendm,location="left",label = "Phyloendemisms")
```

## 

Con estos datos, podemos hacernos preguntas cómo: ¿Las comunidades que poseen mayores tasas de diversificación tienen una mayor diversidad filogenética?

```{r}
#| eval: true
#| echo: true
summary(lm(pd$grid$pd~dr$grid$DR))
```

## 

```{r}
#| eval: true
#| echo: true
plot(dr$grid$DR,pd$grid$pd,xlab="Tasa de diversificación",ylab="Diversidad filogenética", pch=16)
```

## 

¿Los endemismos filognéticos siguen un patrón de gradiente latitudinal?

. . .

Obtengamos las coordenadas de cada celda y su valor de filoendemismos:

```{r}
#| eval: true
#| echo: true
coordsx<-grix$grid$gridTemplate %>% 
  st_centroid %>% 
  st_coordinates %>% 
  as.data.frame
endmcoords<-phyendm$grid$phyloWeightedEndemism %>% 
  cbind(coordsx) %>% 
  as.data.frame %>% 
  na.omit 
names(endmcoords)<-c("phyloendemism","x","y")
head(endmcoords)
```

## 

Ahora, pongamos a prueba la pregunta:

```{r}
#| eval: true
#| echo: true
lm(log(phyloendemism)~abs(y),data= endmcoords) %>% 
  summary

```

## 

Parece que los endemismos disminuyen al alejarse del ecuador, siguiendo un gradiente latitudinal. Observémoslo:

```{r}
#| eval: true
#| echo: true
p2<-ggplot(endmcoords,aes(abs(y),log(phyloendemism)))+
            geom_point(color="black")+
            xlab("Latitud absoluta")+
            ylab("log (Filoendemismos)")+
            geom_smooth(method= lm , color="red", fill="#69b3a2", se=TRUE)+
            theme_classic()

plot(p2)
```

. . .

¿Qué podemos concluir de esto?
